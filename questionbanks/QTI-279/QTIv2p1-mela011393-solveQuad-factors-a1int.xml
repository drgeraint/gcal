<?xml version="1.0" encoding="UTF-8"?>
<assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.imsglobal.org/xsd/imsqti_v2p1 imsqti_v2p1.xsd	http://mathassess.qtitools.org/xsd/mathassess mathassess.xsd"
	identifier="QTIv2p1-mela011393a1" title="Solve a quadratic by factorising, a is 1" adaptive="true"
	timeDependent="false" xmlns:m="http://www.w3.org/1998/Math/MathML"
	xmlns:ma="http://mathassess.qtitools.org/xsd/mathassess">
    <!-- originally MAD05-Factors-SR, modified to the simpler case with a quadratic expression in x -->
    <responseDeclaration identifier="RESPONSE1" cardinality="single" baseType="integer"/>
    <responseDeclaration identifier="printMath1" cardinality="single" baseType="string"/>
    <responseDeclaration identifier="RESPONSE2" cardinality="single" baseType="integer"/>
    <responseDeclaration identifier="printMath2" cardinality="single" baseType="string"/>
    <responseDeclaration identifier="HINTREQUEST" cardinality="single" baseType="boolean"/>
	<responseDeclaration identifier="SOLREQUEST" cardinality="single" baseType="boolean"/>
	<outcomeDeclaration baseType="identifier" cardinality="multiple" identifier="FEEDBACK"/>
	<outcomeDeclaration baseType="identifier" cardinality="single" identifier="EMPTY"/>
	<outcomeDeclaration baseType="float" cardinality="single" identifier="SCORE" normalMaximum="2.0"
		normalMinimum="0.0">
		<defaultValue>
			<value>0.0</value>
		</defaultValue>
	</outcomeDeclaration>
	<outcomeDeclaration baseType="boolean" cardinality="single" identifier="seenSolution">
		<defaultValue>
			<value>false</value>
		</defaultValue>
	</outcomeDeclaration>
	<outcomeDeclaration baseType="boolean" cardinality="single" identifier="seenHint">
		<defaultValue>
			<value>false</value>
		</defaultValue>
	</outcomeDeclaration>
	<outcomeDeclaration baseType="identifier" cardinality="single" identifier="ASKHINT">
		<defaultValue>
			<value>askhint</value>
		</defaultValue>
	</outcomeDeclaration>
	<outcomeDeclaration baseType="identifier" cardinality="single" identifier="ASKSOLUTION">
		<defaultValue>
			<value>asksolution</value>
		</defaultValue>
	</outcomeDeclaration>
	<outcomeDeclaration identifier="mSubst1" cardinality="record"/>
	<outcomeDeclaration identifier="mSubst2" cardinality="record"/>
    <outcomeDeclaration identifier="mSubst3" cardinality="record"/>
    <outcomeDeclaration identifier="mSubst4" cardinality="record"/>
	<outcomeDeclaration identifier="oDummy" cardinality="single" baseType="boolean"/>
	<outcomeDeclaration identifier="ob1" cardinality="single" baseType="boolean"/>
	<outcomeDeclaration identifier="ob2" cardinality="single" baseType="boolean"/>
	<outcomeDeclaration identifier="ob3" cardinality="single" baseType="boolean"/>
	<outcomeDeclaration identifier="ob4" cardinality="single" baseType="boolean"/>
	<outcomeDeclaration identifier="ob5" cardinality="single" baseType="boolean"/>
	<outcomeDeclaration identifier="ob6" cardinality="single" baseType="boolean"/>
	<templateDeclaration baseType="boolean" cardinality="single" identifier="keepRandomSeed"
		mathVariable="false" paramVariable="false"/>
	<templateDeclaration baseType="integer" cardinality="single" identifier="iRandomSeed"
		mathVariable="false" paramVariable="false"/>
	<templateDeclaration identifier="oExpr" cardinality="record" mathVariable="true"/>
	<templateDeclaration identifier="tDummy" cardinality="single" baseType="boolean"/>
    <templateDeclaration identifier="iA" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="iB" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="iC" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="iD" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="iAC" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="iBC" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="iAD" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="iADpBC" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="iBD" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="mFac1" cardinality="record" mathVariable="true"/>
	<templateDeclaration identifier="mFac2" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="mRoot1" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="mRoot2" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="mCX" cardinality="record" mathVariable="true"/>
	<templateDeclaration identifier="mQues" cardinality="record" mathVariable="true"/>
	<templateDeclaration identifier="mAns" cardinality="record" mathVariable="true"/>
	<templateProcessing>
	    <setTemplateValue identifier="iA">
	        <baseValue baseType="integer">1</baseValue>
	    </setTemplateValue>
	    <setTemplateValue identifier="iB">
	        <product>
	            <randomInteger min="1" max="9"/>
	            <randomInteger min="-1" max="1" step="2"/>
	        </product>
	    </setTemplateValue>
	    <setTemplateValue identifier="iC">
	        <baseValue baseType="integer">1</baseValue>
	    </setTemplateValue>
	    <setTemplateValue identifier="iD">
	        <product>
	            <randomInteger min="1" max="9"/>
	            <randomInteger min="-1" max="1" step="2"/>
	        </product>
	    </setTemplateValue>
	    <setTemplateValue identifier="iAD">
	        <product>
	            <variable identifier="iA"/>
	            <variable identifier="iD"/>
	        </product>
	    </setTemplateValue>
	    <setTemplateValue identifier="iAC">
	        <product>
	            <variable identifier="iA"/>
	            <variable identifier="iC"/>
	        </product>
	    </setTemplateValue>
	    <setTemplateValue identifier="iBC">
	        <product>
	            <variable identifier="iC"/>
	            <variable identifier="iB"/>
	        </product>
	    </setTemplateValue>
	    <setTemplateValue identifier="iBD">
	        <product>
	            <variable identifier="iD"/>
	            <variable identifier="iB"/>
	        </product>
	    </setTemplateValue>
	    <setTemplateValue identifier="iADpBC">
	        <sum>
	            <variable identifier="iAD"/>
	            <variable identifier="iBC"/>
	        </sum>
	    </setTemplateValue>
	    <setTemplateValue identifier="tDummy">
			<customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
				<baseValue baseType="string">
					<![CDATA[
			mFac1:ev(iA*x+iB,simp);
			mFac2:ev(iC*x+iD,simp);
			mCX::ev(x,simp);
			mAns: mFac1*mFac2;
			mQues:ev(expand(mAns),simp);
			mRoot1:ev(-iB/iA,simp);
			mRoot2:ev(-iD/iC,simp);
			]]>
				</baseValue>
			</customOperator>
		</setTemplateValue>
	</templateProcessing>
	<itemBody>
		<p> Solve this quadratic equation: </p>
		<p>
			<m:math display="block">
			    <m:mi>mQues</m:mi>
			    <m:mo>=</m:mo>
			    <m:mn>0</m:mn>
			</m:math>
		</p>
		<div>
			<table>
				<tbody>
				    <tr>
				        <td>
				            <m:math><m:mi>x</m:mi><m:mo> = </m:mo></m:math>
				        </td>
				        <td>
				            <textEntryInteraction responseIdentifier="RESPONSE1" expectedLength="20"/>
				        </td>
				    </tr>
				    <tr>
				        <td>or&#160;&#160;&#160;&#160;&#160;</td><td> </td>
				    </tr>
				    <tr>
				        <td>
				            <m:math><m:mi>x</m:mi><m:mo> = </m:mo></m:math>
				        </td>
				        <td>
				            <textEntryInteraction responseIdentifier="RESPONSE2" expectedLength="20"/>
				        </td>
				    </tr>
				    <tr>
				        <td colspan="2">
				            <feedbackInline showHide="show" outcomeIdentifier="FEEDBACK"
				                identifier="CORRECT">Correct.</feedbackInline>
				            <feedbackBlock showHide="show" outcomeIdentifier="FEEDBACK"
				                identifier="PartFactor">
				                <p> Your answer is partially factorised. You should have grouped the
				                    terms multiplying the factor. </p>
				            </feedbackBlock>
				            <feedbackBlock showHide="show" outcomeIdentifier="FEEDBACK"
				                identifier="OK1">
				                <p> Your first root is correct. </p>
				            </feedbackBlock>
				            <feedbackBlock showHide="show" outcomeIdentifier="FEEDBACK"
				                identifier="OK2">
				                <p> Your second root is correct. </p>
				            </feedbackBlock>
				            <feedbackBlock showHide="show" outcomeIdentifier="FEEDBACK"
				                identifier="Sign1">
				                <p> Your first root has the wrong sign. </p>
				            </feedbackBlock>
				            <feedbackBlock showHide="show" outcomeIdentifier="FEEDBACK"
				                identifier="Sign2">
				                <p> Your second root has the wrong sign. </p>
				            </feedbackBlock>
				            <feedbackBlock showHide="show" outcomeIdentifier="FEEDBACK"
				                identifier="Bad1">
				                <p> Your first input is not a root of the equation. </p>
				            </feedbackBlock>
				            <feedbackBlock showHide="show" outcomeIdentifier="FEEDBACK"
				                identifier="Bad2">
				                <p> Your second input is not a root of the equation. </p>
				            </feedbackBlock>
				            <feedbackBlock showHide="show" outcomeIdentifier="FEEDBACK"
				                identifier="REPEATED">
				                <p>You have given the same root twice, but the equation has two different roots.</p>
				            </feedbackBlock>
				            <feedbackBlock showHide="show" outcomeIdentifier="FEEDBACK"
				                identifier="NULLINPUT">
				                <p>Please enter two expressions!</p>
				            </feedbackBlock>
				        </td>
				    </tr>
				</tbody>
			</table>
		</div>
	    <feedbackBlock id="feedbackBlock4" identifier="THREETRIES"
	        outcomeIdentifier="FEEDBACK" showHide="show">
	        <p> You have had three attempts at answering this question, so here is the
	            solution: </p>
	    </feedbackBlock>
	    <feedbackBlock showHide="show" outcomeIdentifier="FEEDBACK" identifier="SOLUTION">
		    <p>By trial and error, we find</p>
		    <div>
		        <m:math display="block" id="mathML0">
		            <m:semantics>
		                <m:mrow>
		                    <m:mi>iADpBC</m:mi>
		                    <m:mo>=</m:mo>
		                    <m:mi>iAD</m:mi>
		                    <m:mo>+</m:mo>
		                    <m:mi>iBC</m:mi>
		                </m:mrow>
		                <m:annotation encoding="SnuggleTeX">\[\qv{iADpBC}=\qv{iAD}+(\qv{iBC})\]</m:annotation>
		            </m:semantics>
		        </m:math>
		    </div>
		    <div>
		        <m:math display="block" id="mathML01">
		            <m:semantics>
		                <m:mrow>
		                    <m:mi>iBD</m:mi>
		                    <m:mo>=</m:mo>
		                    <m:mi>iB</m:mi>
		                    <m:mo>&#xd7;</m:mo>
		                    <m:mi>iD</m:mi>
		                </m:mrow>
		                <m:annotation encoding="SnuggleTeX">\[\qv{iBD}=\qv{iB}\times(\qv{iD})\]</m:annotation>
		            </m:semantics>
		        </m:math>
		    </div>
		    <div>
		        <m:math display="block" id="mathML2">
		            <m:semantics>
		                <m:mtable>
		                    <m:mtr>
		                        <m:mtd columnalign="right">
		                            <m:mi>mQues</m:mi>
		                        </m:mtd>
		                        <m:mtd columnalign="center">
		                            <m:mo>=</m:mo>
		                        </m:mtd>
		                        <m:mtd columnalign="left">
		                            <m:mi>mAns</m:mi>
		                        </m:mtd>
		                    </m:mtr>
		                </m:mtable>
		                <m:annotation encoding="SnuggleTeX">\begin{eqnarray}\qv{mQues} &amp;=&amp; \qv{mAns}
		                    \end</m:annotation>
		            </m:semantics>
		        </m:math>
		    </div>
		    <p>So the equation </p>
		    <div>
		        <m:math display="block">
		            <m:mi>mQues</m:mi>
		            <m:mo>=</m:mo>
		            <m:mn>0</m:mn>
		        </m:math>
		    </div>
		    <p>is satisfied when </p>
		    <div>
		        <m:math display="block">
		            <m:semantics>
		                <m:mtable>
		                    <m:mtr>
		                        <m:mtd columnalign="right">
		                            <m:mi>mFac1</m:mi>
		                        </m:mtd>
		                        <m:mtd columnalign="center">
		                            <m:mo>=</m:mo>
		                        </m:mtd>
		                        <m:mtd columnalign="left">
		                            <m:mi>0</m:mi>
		                        </m:mtd>
		                    </m:mtr>
		                    <m:mtr>
		                        <m:mtd columnalign="right">
		                            <m:mi>x</m:mi>
		                        </m:mtd>
		                        <m:mtd columnalign="center">
		                            <m:mo>=</m:mo>
		                        </m:mtd>
		                        <m:mtd columnalign="left">
		                            <m:mi>mRoot1</m:mi>
		                        </m:mtd>
		                    </m:mtr>
		                </m:mtable>
		                <m:annotation encoding="SnuggleTeX">\begin{eqnarray}\qv{mFac1} &amp;=&amp; 0\\x&amp;=&amp; \qv{mRoot1}
		                    \end</m:annotation>
		            </m:semantics>
		        </m:math>
		    </div>
		    <p>or when </p>
		    <div>
		        <m:math display="block">
		            <m:semantics>
		                <m:mtable>
		                    <m:mtr>
		                        <m:mtd columnalign="right">
		                            <m:mi>mFac2</m:mi>
		                        </m:mtd>
		                        <m:mtd columnalign="center">
		                            <m:mo>=</m:mo>
		                        </m:mtd>
		                        <m:mtd columnalign="left">
		                            <m:mi>0</m:mi>
		                        </m:mtd>
		                    </m:mtr>
		                    <m:mtr>
		                        <m:mtd columnalign="right">
		                            <m:mi>x</m:mi>
		                        </m:mtd>
		                        <m:mtd columnalign="center">
		                            <m:mo>=</m:mo>
		                        </m:mtd>
		                        <m:mtd columnalign="left">
		                            <m:mi>mRoot2</m:mi>
		                        </m:mtd>
		                    </m:mtr>
		                </m:mtable>
		                <m:annotation encoding="SnuggleTeX">\begin{eqnarray}\qv{mFac2} &amp;=&amp; 0\\x&amp;=&amp; \qv{mRoot2}
		                    \end</m:annotation>
		            </m:semantics>
		        </m:math>
		    </div>
		    <p>So the roots of this equation are</p>
		    <div>
		        <m:math display="block">
		            <m:semantics>
		                <m:mtable>
		                    <m:mtr>
		                        <m:mtd columnalign="right">
		                            <m:mi>x</m:mi>
		                        </m:mtd>
		                        <m:mtd columnalign="center">
		                            <m:mo>=</m:mo>
		                        </m:mtd>
		                        <m:mtd columnalign="left">
		                            <m:mi>mRoot1</m:mi>
		                        </m:mtd>
		                        <m:mtd columnalign="center">
		                            <m:mtext>&#160;&#160;&#160;and&#160;&#160;&#160;</m:mtext>
		                        </m:mtd>
		                        <m:mtd columnalign="right">
		                            <m:mi>x</m:mi>
		                        </m:mtd>
		                        <m:mtd columnalign="center">
		                            <m:mo>=</m:mo>
		                        </m:mtd>
		                        <m:mtd columnalign="left">
		                            <m:mi>mRoot2</m:mi>
		                        </m:mtd>
		                    </m:mtr>
		                </m:mtable>
		                <m:annotation encoding="SnuggleTeX">\begin{eqnarray}x&amp;=&amp; \qv{mRoot2} \mbox{   and   } x&amp;=&amp; \qv{mRoot2}
		                    \end</m:annotation>
		            </m:semantics>
		        </m:math>
		    </div>
		</feedbackBlock>
		<feedbackBlock showHide="show" outcomeIdentifier="FEEDBACK" identifier="HINT">
			<p>Look for a pair of numbers that multiply together to give <printedVariable identifier="iAC"/> 
			    and another pair that multiply together to give <printedVariable identifier="iBD"/>. 
			    Which combination of these gives <printedVariable identifier="iADpBC"/> in the middle?</p>
		    <p>Once you have the factors, use them to find the two roots.</p>
		</feedbackBlock>
		<feedbackBlock identifier="SEEN-SOLUTION" outcomeIdentifier="FEEDBACK" showHide="show">
			<p> Since you have viewed the solution, your score for this question will be 0. </p>
		</feedbackBlock>
		<feedbackBlock identifier="SEEN-HINT" outcomeIdentifier="FEEDBACK" showHide="show">
			<p> Since you have viewed the hint, your score for this question will be halved. </p>
		</feedbackBlock>
		<feedbackBlock identifier="askhint" outcomeIdentifier="ASKHINT" showHide="show">
			<p>
				<endAttemptInteraction id="endAttemptInteraction1" responseIdentifier="HINTREQUEST"
					title="Show Hint"/>
			</p>
		</feedbackBlock>
		<feedbackBlock identifier="asksolution" outcomeIdentifier="ASKSOLUTION" showHide="show">
			<p>
				<endAttemptInteraction id="endAttemptInteraction2" responseIdentifier="SOLREQUEST"
					title="Show Solution"/>
			</p>
		</feedbackBlock>
	</itemBody>
	<responseProcessing>
		<setOutcomeValue identifier="FEEDBACK">
			<multiple>
				<variable identifier="EMPTY"/>
			</multiple>
		</setOutcomeValue>
		<responseCondition>
			<responseIf>
				<variable identifier="HINTREQUEST"/>
				<setOutcomeValue identifier="FEEDBACK">
					<multiple>
						<baseValue baseType="identifier">HINT</baseValue>
					</multiple>
				</setOutcomeValue>
				<setOutcomeValue identifier="seenHint">
					<baseValue baseType="boolean">true</baseValue>
				</setOutcomeValue>
			</responseIf>
			<responseElseIf>
				<variable identifier="SOLREQUEST"/>
				<setOutcomeValue identifier="FEEDBACK">
					<multiple>
						<baseValue baseType="identifier">SOLUTION</baseValue>
					</multiple>
				</setOutcomeValue>
				<setOutcomeValue identifier="seenSolution">
					<baseValue baseType="boolean">true</baseValue>
				</setOutcomeValue>
				<setOutcomeValue identifier="completionStatus">
					<baseValue baseType="identifier">completed</baseValue>
				</setOutcomeValue>
				<setOutcomeValue identifier="ASKHINT">
					<baseValue baseType="identifier">null</baseValue>
				</setOutcomeValue>
				<setOutcomeValue identifier="ASKSOLUTION">
					<baseValue baseType="identifier">null</baseValue>
				</setOutcomeValue>
			</responseElseIf>
			<responseElse>
				<responseCondition>
					<responseIf>
					    <or>
					        <isNull>
					            <variable identifier="RESPONSE1"/>
					        </isNull>
					        <isNull>
					            <variable identifier="RESPONSE2"/>
					        </isNull>
					    </or>
						<setOutcomeValue identifier="SCORE">
							<baseValue baseType="float">0.0</baseValue>
						</setOutcomeValue>
					    <setOutcomeValue identifier="FEEDBACK">
					        <multiple>
					            <baseValue baseType="identifier">NULLINPUT</baseValue>
					        </multiple>
					    </setOutcomeValue>
					</responseIf>
					<responseElse>
					    <setOutcomeValue identifier="oDummy">
					        <customOperator class="org.qtitools.mathassess.ScriptRule"
					            ma:syntax="text/x-maxima">
					            <baseValue baseType="string">
					                <![CDATA[
								mSubst1:ev(subst(RESPONSE1,x,mAns),simp);
								mSubst2:ev(subst(RESPONSE2,x,mAns),simp);
								mSubst3:ev(subst(-RESPONSE1,x,mAns),simp);
								mSubst4:ev(subst(-RESPONSE2,x,mAns),simp);
								ob1:is(is(equal(mSubst1,0))=true);
								ob2:is(is(equal(mSubst2,0))=true);
								ob3:is(is(equal(mSubst3,0))=true);
								ob4:is(is(equal(mSubst4,0))=true);
								ob5:is(is(equal(RESPONSE1,RESPONSE2))=true);
								ob6:is(is(equal(iB/iA,iD/iC))=true);
								]]>
					            </baseValue>
					        </customOperator>
					    </setOutcomeValue>
					    <responseCondition>
							<responseIf>
							    <variable identifier="ob5"/>
							    <responseCondition>
							        <responseIf>
							            <variable identifier="ob6"/>
							            <responseCondition>
							                <responseIf>
							                    <variable identifier="ob1"/>
							                    <setOutcomeValue identifier="FEEDBACK">
							                        <multiple>
							                            <baseValue baseType="identifier">OK1</baseValue>
							                            <baseValue baseType="identifier">OK2</baseValue>
							                        </multiple>
							                    </setOutcomeValue>
							                    <setOutcomeValue identifier="SCORE">
							                        <baseValue baseType="float">2.0</baseValue>
							                    </setOutcomeValue>
							                </responseIf>
							                <responseElseIf>
							                    <variable identifier="ob3"/>
							                    <setOutcomeValue identifier="FEEDBACK">
							                        <multiple>
							                            <baseValue baseType="identifier">Sign1</baseValue>
							                            <baseValue baseType="identifier">Sign2</baseValue>
							                        </multiple>
							                    </setOutcomeValue>
							                    <setOutcomeValue identifier="SCORE">
							                        <baseValue baseType="float">1.0</baseValue>
							                    </setOutcomeValue>
							                </responseElseIf>
							                <responseElse>
							                    <setOutcomeValue identifier="FEEDBACK">
							                        <multiple>
							                            <baseValue baseType="identifier">Bad1</baseValue>
							                            <baseValue baseType="identifier">Bad2</baseValue>
							                        </multiple>
							                    </setOutcomeValue>
							                    <setOutcomeValue identifier="SCORE">
							                        <baseValue baseType="float">0.0</baseValue>
							                    </setOutcomeValue>
							                </responseElse>
							            </responseCondition>
							        </responseIf>
							        <responseElse>
							            <responseCondition>
							                <responseIf>
							                    <variable identifier="ob1"/>
							                    <setOutcomeValue identifier="FEEDBACK">
							                        <multiple>
							                            <baseValue baseType="identifier">OK1</baseValue>
							                            <baseValue baseType="identifier">REPEATED</baseValue>
							                        </multiple>
							                    </setOutcomeValue>
							                    <setOutcomeValue identifier="SCORE">
							                        <baseValue baseType="float">2.0</baseValue>
							                    </setOutcomeValue>
							                </responseIf>
							                <responseElseIf>
							                    <variable identifier="ob3"/>
							                    <setOutcomeValue identifier="FEEDBACK">
							                        <multiple>
							                            <baseValue baseType="identifier">Sign1</baseValue>
							                            <baseValue baseType="identifier">REPEATED</baseValue>
							                        </multiple>
							                    </setOutcomeValue>
							                    <setOutcomeValue identifier="SCORE">
							                        <baseValue baseType="float">1.0</baseValue>
							                    </setOutcomeValue>
							                </responseElseIf>
							                <responseElse>
							                    <setOutcomeValue identifier="FEEDBACK">
							                        <multiple>
							                            <baseValue baseType="identifier">Bad1</baseValue>
							                            <baseValue baseType="identifier">REPEATED</baseValue>
							                        </multiple>
							                    </setOutcomeValue>
							                    <setOutcomeValue identifier="SCORE">
							                        <baseValue baseType="float">0.0</baseValue>
							                    </setOutcomeValue>
							                </responseElse>
							            </responseCondition>
							        </responseElse>
							    </responseCondition>
							</responseIf>
							<responseElse>
							    <!-- different roots given -->
							    <responseCondition>
									<responseIf>
									    <variable identifier="ob1"/>
										<setOutcomeValue identifier="FEEDBACK">
											<multiple>
												<baseValue baseType="identifier">OK1</baseValue>
											</multiple>
										</setOutcomeValue>
										<setOutcomeValue identifier="SCORE">
											<baseValue baseType="float">1.0</baseValue>
										</setOutcomeValue>
									</responseIf>
									<responseElseIf>
										<variable identifier="ob3"/>
										<setOutcomeValue identifier="FEEDBACK">
											<multiple>
												<baseValue baseType="identifier">Sign1</baseValue>
											</multiple>
										</setOutcomeValue>
										<setOutcomeValue identifier="SCORE">
											<baseValue baseType="float">0.5</baseValue>
										</setOutcomeValue>
									</responseElseIf>
									<responseElse>
										<setOutcomeValue identifier="FEEDBACK">
											<multiple>
												<baseValue baseType="identifier">Bad1</baseValue>
											</multiple>
										</setOutcomeValue>
										<setOutcomeValue identifier="SCORE">
											<baseValue baseType="float">0.0</baseValue>
										</setOutcomeValue>
									</responseElse>
								</responseCondition>
							    <responseCondition>
							        <responseIf>
							            <variable identifier="ob2"/>
							            <setOutcomeValue identifier="FEEDBACK">
							                <multiple>
							                    <variable identifier="FEEDBACK"/>
							                    <baseValue baseType="identifier">OK2</baseValue>
							                </multiple>
							            </setOutcomeValue>
							            <setOutcomeValue identifier="SCORE">
							                <sum>
							                    <variable identifier="SCORE"/>
							                    <baseValue baseType="float">1.0</baseValue>
							                </sum>
							            </setOutcomeValue>
							        </responseIf>
							        <responseElseIf>
							            <variable identifier="ob4"/>
							            <setOutcomeValue identifier="FEEDBACK">
							                <multiple>
							                    <variable identifier="FEEDBACK"/>
							                    <baseValue baseType="identifier">Sign2</baseValue>
							                </multiple>
							            </setOutcomeValue>
							            <setOutcomeValue identifier="SCORE">
							                <sum>
							                    <variable identifier="SCORE"/>
							                    <baseValue baseType="float">0.5</baseValue>
							                </sum>
							            </setOutcomeValue>
							        </responseElseIf>
							        <responseElse>
							            <setOutcomeValue identifier="FEEDBACK">
							                <multiple>
							                    <variable identifier="FEEDBACK"/>
							                    <baseValue baseType="identifier">Bad2</baseValue>
							                </multiple>
							            </setOutcomeValue>
							            <setOutcomeValue identifier="SCORE">
							                <sum>
							                    <variable identifier="SCORE"/>
							                    <baseValue baseType="float">0.0</baseValue>
							                </sum>
							            </setOutcomeValue>
							        </responseElse>
							    </responseCondition>
							</responseElse>
						</responseCondition>
						<responseCondition>
							<responseIf>
								<variable identifier="seenSolution"/>
								<setOutcomeValue identifier="FEEDBACK">
									<multiple>
										<variable identifier="FEEDBACK"/>
										<baseValue baseType="identifier">SEEN-SOLUTION</baseValue>
									</multiple>
								</setOutcomeValue>
								<setOutcomeValue identifier="SCORE">
									<baseValue baseType="float">0.0</baseValue>
								</setOutcomeValue>
							</responseIf>
							<responseElseIf>
								<variable identifier="seenHint"/>
								<setOutcomeValue identifier="FEEDBACK">
									<multiple>
										<variable identifier="FEEDBACK"/>
										<baseValue baseType="identifier">SEEN-HINT</baseValue>
									</multiple>
								</setOutcomeValue>
								<setOutcomeValue identifier="SCORE">
									<divide>
										<variable identifier="SCORE"/>
										<baseValue baseType="float">2.0</baseValue>
									</divide>
								</setOutcomeValue>
							</responseElseIf>
						</responseCondition>
					    <responseCondition>
					        <responseIf>
					            <gt>
					                <variable identifier="numAttempts"/>
					                <baseValue baseType="integer">3</baseValue>
					            </gt>
					            <setOutcomeValue identifier="FEEDBACK">
					                <multiple>
					                    <baseValue baseType="identifier">THREETRIES</baseValue>
					                    <baseValue baseType="identifier">SOLUTION</baseValue>
					                </multiple>
					            </setOutcomeValue>
					            <setOutcomeValue identifier="completionStatus">
					                <baseValue baseType="identifier">completed</baseValue>
					            </setOutcomeValue>
					            <setOutcomeValue identifier="ASKHINT">
					                <baseValue baseType="identifier">null</baseValue>
					            </setOutcomeValue>
					            <setOutcomeValue identifier="ASKSOLUTION">
					                <baseValue baseType="identifier">null</baseValue>
					            </setOutcomeValue>
					        </responseIf>
					    </responseCondition>
					</responseElse>
				</responseCondition>
			</responseElse>
		</responseCondition>
	</responseProcessing>
</assessmentItem>

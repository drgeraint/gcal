<?xml version="1.0" encoding="UTF-8"?>
<assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p1"
    xmlns:m="http://www.w3.org/1998/Math/MathML"
    xmlns:ma="http://mathassess.qtitools.org/xsd/mathassess"
    xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" adaptive="true" identifier="Test06-427"
    timeDependent="false" title="Substitute for 1/n in rational function" toolName="Mathqurate"
    toolVersion="1.0" xml:lang="en"
    xsi:schemaLocation="http://www.imsglobal.org/xsd/imsqti_v2p1 imsqti_v2p1.xsd http://mathassess.qtitools.org/xsd/mathassess mathassess.xsd">
    <responseDeclaration cardinality="record" identifier="RESPONSE"/>
    <responseDeclaration baseType="string" cardinality="single" identifier="printMath"/>
    <responseDeclaration baseType="boolean" cardinality="single" identifier="HINTREQUEST"/>
    <responseDeclaration baseType="boolean" cardinality="single" identifier="SOLREQUEST"/>
    <outcomeDeclaration baseType="identifier" cardinality="multiple" identifier="FEEDBACK"/>
    <outcomeDeclaration baseType="identifier" cardinality="single" identifier="EMPTY"/>
    <outcomeDeclaration baseType="float" cardinality="single" identifier="SCORE" normalMaximum="2.0"
        normalMinimum="0.0">
        <defaultValue>
            <value>0 </value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="seenSolution">
        <defaultValue>
            <value>false</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="seenHint">
        <defaultValue>
            <value>false</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="identifier" cardinality="single" identifier="ASKHINT">
        <defaultValue>
            <value>askhint</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="identifier" cardinality="single" identifier="ASKSOLUTION">
        <defaultValue>
            <value>asksolution</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration cardinality="record" identifier="oInput"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="odummy"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="polyOK"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="isEquiv"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="isEqual"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="isBadSign"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="isBadSignEquiv"/>
    <templateDeclaration baseType="boolean" cardinality="single" identifier="keepRandomSeed"
        mathVariable="false" paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iRandomSeed"
        mathVariable="false" paramVariable="false"/>
    <templateDeclaration baseType="boolean" cardinality="single" identifier="dummy"
        mathVariable="false" paramVariable="false"/>
    <templateDeclaration baseType="identifier" cardinality="multiple" identifier="showSolParts"
        mathVariable="false" paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iA" mathVariable="true"
        paramVariable="false">
        <defaultValue>
            <value>0</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iB" mathVariable="true"
        paramVariable="false">
        <defaultValue>
            <value>0</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iC" mathVariable="true"
        paramVariable="false">
        <defaultValue>
            <value>0</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="string" cardinality="single" identifier="sSignA"
        mathVariable="true" paramVariable="false">
        <defaultValue>
            <value>0</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="string" cardinality="single" identifier="sSignB"
        mathVariable="true" paramVariable="false">
        <defaultValue>
            <value>0</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="string" cardinality="single" identifier="sSignC"
        mathVariable="true" paramVariable="false">
        <defaultValue>
            <value>0</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iAbsA"
        mathVariable="true" paramVariable="false">
        <defaultValue>
            <value>0</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iAbsB"
        mathVariable="true" paramVariable="false">
        <defaultValue>
            <value>0</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iAbsC"
        mathVariable="true" paramVariable="false">
        <defaultValue>
            <value>0</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iD" mathVariable="true"
        paramVariable="false">
        <defaultValue>
            <value>0</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iGCD"
        mathVariable="true" paramVariable="false">
        <defaultValue>
            <value>1</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iNumEval"
        mathVariable="true" paramVariable="false">
        <defaultValue>
            <value>1</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iDenEval"
        mathVariable="true" paramVariable="false">
        <defaultValue>
            <value>1</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration cardinality="record" identifier="mAns" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mBadSign" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mVal" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mNum" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mDen" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mNumTop" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mDenTop" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mNumSubst" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mDenSubst" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mNumEval" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mDenEval" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mNumTopEval" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mNumTopSubst" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mDenTopSubst" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="ordered" identifier="iRandomState"
        mathVariable="false" paramVariable="false"/>
    <templateProcessing>
        <setTemplateValue identifier="dummy">
            <customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                <baseValue baseType="string"><![CDATA[

 s1 : make_random_state(true)$ set_random_state(s1);

 choose(list) := list[1+random(length(list))];

 simp:true;

 iA:ev((random(3)+1)*(2*random(2)-1),simp);

 iB:ev((random(3)+1)*(2*random(2)-1),simp);

 iC:ev((random(3)+1)*(2*random(2)-1),simp);

 iD:ev((random(3)+2),simp);

 mVal:1/iD;

 mNum:ev(x+iA,simp);

 mDen:ev(x^2+iB*x+iC,simp);

 mNumTop:ev(1+iA*y,simp);

 mDenTop:ev(1+iB*y+iC*y^2,simp);

 simp:false;

 mNumSubst:expand(subst((mVal),x,mNum),0,0);

 mDenSubst:ev(subst((mVal),x,mDen),nosimp);

 mNumTopSubst:ev(subst((iD),y,mNumTop),nosimp);

 mDenTopSubst:ev(subst((iD),y,mDenTop),nosimp);

 mNumTopEval:iD*(mNumTopSubst);

 simp:true;

 iDenEval:ev(mDenTopSubst,numer,simp);

 iNumEval:ev(mNumTopEval,numer,simp);

 iGCD:ev(gcd(mNumEval,mDenEval),numer,simp);

 iNum:ev(iNumEval/iGCD,numer,simp);

 iDen:ev(iDenEval/iGCD,numer,simp);

 mAns:ev(iNum/iDen,simp);

 mBadSign:ev(-1*mAns,simp);

]]></baseValue>
            </customOperator>
        </setTemplateValue>
        <templateCondition>
            <templateIf>
                <lt>
                    <variable identifier="iA"/>
                    <baseValue baseType="integer">0</baseValue>
                </lt>
                <setTemplateValue identifier="iAbsA">
                    <subtract>
                        <baseValue baseType="integer">0</baseValue>
                        <variable identifier="iA"/>
                    </subtract>
                </setTemplateValue>
                <setTemplateValue identifier="sSignA">
                    <baseValue baseType="string">-</baseValue>
                </setTemplateValue>
            </templateIf>
            <templateElse>
                <setTemplateValue identifier="iAbsA">
                    <variable identifier="iA"/>
                </setTemplateValue>
                <setTemplateValue identifier="sSignA">
                    <baseValue baseType="string">+</baseValue>
                </setTemplateValue>
            </templateElse>
        </templateCondition>
        <templateCondition>
            <templateIf>
                <lt>
                    <variable identifier="iB"/>
                    <baseValue baseType="integer">0</baseValue>
                </lt>
                <setTemplateValue identifier="iAbsB">
                    <subtract>
                        <baseValue baseType="integer">0</baseValue>
                        <variable identifier="iB"/>
                    </subtract>
                </setTemplateValue>
                <setTemplateValue identifier="sSignB">
                    <baseValue baseType="string">-</baseValue>
                </setTemplateValue>
            </templateIf>
            <templateElse>
                <setTemplateValue identifier="iAbsB">
                    <variable identifier="iB"/>
                </setTemplateValue>
                <setTemplateValue identifier="sSignB">
                    <baseValue baseType="string">+</baseValue>
                </setTemplateValue>
            </templateElse>
        </templateCondition>
        <templateCondition>
            <templateIf>
                <lt>
                    <variable identifier="iC"/>
                    <baseValue baseType="integer">0</baseValue>
                </lt>
                <setTemplateValue identifier="iAbsC">
                    <subtract>
                        <baseValue baseType="integer">0</baseValue>
                        <variable identifier="iC"/>
                    </subtract>
                </setTemplateValue>
                <setTemplateValue identifier="sSignC">
                    <baseValue baseType="string">-</baseValue>
                </setTemplateValue>
            </templateIf>
            <templateElse>
                <setTemplateValue identifier="iAbsC">
                    <variable identifier="iC"/>
                </setTemplateValue>
                <setTemplateValue identifier="sSignC">
                    <baseValue baseType="string">+</baseValue>
                </setTemplateValue>
            </templateElse>
        </templateCondition>
    </templateProcessing>
    <itemBody class="">
        <div class="">
            <p class="">Express&#160;&#160;<m:math id="mathML0">
                    <m:semantics>
                        <m:mrow>
                            <m:mi>f</m:mi>
                            <m:mfenced close=")" open="(">
                                <m:mi>mVal</m:mi>
                            </m:mfenced>
                        </m:mrow>
                        <m:annotation encoding="SnuggleTeX">\[f(\qv{mVal})\]</m:annotation>
                    </m:semantics>
                </m:math>&#160;&#160;as a fraction if</p>
            <p class="">
                <m:math display="block" id="mathML1">
                    <m:semantics>
                        <m:mrow>
                            <m:mi>f</m:mi>
                            <m:mfenced close=")" open="(">
                                <m:mi>x</m:mi>
                            </m:mfenced>
                            <m:mo>=</m:mo>
                            <m:mfrac>
                                <m:mi>mNum</m:mi>
                                <m:mi>mDen</m:mi>
                            </m:mfrac>
                        </m:mrow>
                        <m:annotation encoding="SnuggleTeX"
                            >\[f(x)=\frac{\qv{mNum}}{\qv{mDen}}\]</m:annotation>
                    </m:semantics>
                </m:math>
            </p>
            <div class="">
                <table class="">
                    <tbody class="">
                        <tr class="">
                            <td class="">
                                <div class="">
                                    <m:math display="block" id="mathML2">
                                        <m:semantics>
                                            <m:mrow>
                                                <m:mi>f</m:mi>
                                                <m:mfenced close=")" open="(">
                                                  <m:mi>mVal</m:mi>
                                                </m:mfenced>
                                                <m:mo>=</m:mo>
                                            </m:mrow>
                                            <m:annotation encoding="SnuggleTeX"
                                                >\[f(\qv{mVal})=\]</m:annotation>
                                        </m:semantics>
                                    </m:math>
                                </div>
                            </td>
                            <td class="">
                                <div class="">
                                    <customInteraction
                                        class="org.qtitools.mathassess.MathEntryInteraction"
                                        id="customInteraction0" ma:expectedLength="20"
                                        ma:printIdentifier="printMath" ma:syntax="text/x-maxima"
                                        responseIdentifier="RESPONSE"/>
                                </div>
                            </td>
                            <td class="">
                                <feedbackInline id="feedbackInline0" identifier="CORRECT"
                                    outcomeIdentifier="FEEDBACK" showHide="show"> Correct </feedbackInline>
                                <feedbackInline id="feedbackInline1" identifier="CORRECT2"
                                    outcomeIdentifier="FEEDBACK" showHide="show"> That's correct </feedbackInline>
                                <feedbackInline id="feedbackInline2" identifier="CORRECT3"
                                    outcomeIdentifier="FEEDBACK" showHide="show"> Your answer is
                                    correct but not in its simplest form. </feedbackInline>
                                <feedbackInline id="feedbackInline2" identifier="SIGN1"
                                    outcomeIdentifier="FEEDBACK" showHide="show"> Your answer is
                                    almost correct; you have the wrong sign. </feedbackInline>
                                <feedbackInline id="feedbackInline2" identifier="SIGN2"
                                    outcomeIdentifier="FEEDBACK" showHide="show"> Your answer is
                                    almost correct but not in its simplest form and you have the
                                    wrong sign. </feedbackInline>
                                <feedbackInline id="feedbackInline3" identifier="INCORRECT"
                                    outcomeIdentifier="FEEDBACK" showHide="show"> Incorrect
                                </feedbackInline>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <feedbackBlock id="feedbackBlock4" identifier="THREETRIES" outcomeIdentifier="FEEDBACK"
                showHide="show">
                <p>You have had three attempts at answering this question, so here is the
                    solution:</p>
            </feedbackBlock>
            <feedbackBlock class="" id="feedbackBlock5" identifier="SOLUTION"
                outcomeIdentifier="FEEDBACK" showHide="show">
                <div class="">
                    <p class="">We substitute&#160;<printedVariable id="printedVariable0"
                            identifier="mVal"/>&#160;into f(x) and simplify the result:</p>
                    <div class="">
                        <p class="">
                            <m:math display="block" id="mathML3">
                                <m:semantics>
                                    <m:mtable>
                                        <m:mtr>
                                            <m:mtd columnalign="right">
                                                <m:mi>f</m:mi>
                                                <m:mfenced close=")" open="(">
                                                  <m:mi>mVal</m:mi>
                                                </m:mfenced>
                                            </m:mtd>
                                            <m:mtd columnalign="center">
                                                <m:mo>=</m:mo>
                                            </m:mtd>
                                            <m:mtd columnalign="left">
                                                <m:mfrac>
                                                  <m:mrow>
                                                  <m:mi>mVal</m:mi>
                                                  <m:mi>sSignA</m:mi>
                                                  <m:mi>iAbsA</m:mi>
                                                  </m:mrow>
                                                  <m:mrow>
                                                  <m:msup>
                                                  <m:mfenced close=")" open="(">
                                                  <m:mi>mVal</m:mi>
                                                  </m:mfenced>
                                                  <m:mn>2</m:mn>
                                                  </m:msup>
                                                  <m:mi>sSignB</m:mi>
                                                  <m:mi>iAbsB</m:mi>
                                                  <m:mo>×</m:mo>
                                                  <m:mfenced close=")" open="(">
                                                  <m:mi>mVal</m:mi>
                                                  </m:mfenced>
                                                  <m:mi>sSignC</m:mi>
                                                  <m:mi>iAbsC</m:mi>
                                                  </m:mrow>
                                                </m:mfrac>
                                            </m:mtd>
                                        </m:mtr>
                                        <m:mtr>
                                            <m:mtd columnalign="right"/>
                                            <m:mtd columnalign="center">
                                                <m:mo>=</m:mo>
                                            </m:mtd>
                                            <m:mtd columnalign="left">
                                                <m:mfrac>
                                                  <m:mfrac>
                                                  <m:mrow>
                                                  <m:mn>1</m:mn>
                                                  <m:mi>sSignA</m:mi>
                                                  <m:mi>iAbsA</m:mi>
                                                  <m:mo>×</m:mo>
                                                  <m:mi>iD</m:mi>
                                                  </m:mrow>
                                                  <m:mi>iD</m:mi>
                                                  </m:mfrac>
                                                  <m:mfrac>
                                                  <m:mrow>
                                                  <m:mn>1</m:mn>
                                                  <m:mi>sSignB</m:mi>
                                                  <m:mi>iAbsB</m:mi>
                                                  <m:mo>×</m:mo>
                                                  <m:mi>iD</m:mi>
                                                  <m:mi>sSignC</m:mi>
                                                  <m:mi>iAbsC</m:mi>
                                                  <m:mo>×</m:mo>
                                                  <m:msup>
                                                  <m:mi>iD</m:mi>
                                                  <m:mn>2</m:mn>
                                                  </m:msup>
                                                  </m:mrow>
                                                  <m:msup>
                                                  <m:mi>iD</m:mi>
                                                  <m:mn>2</m:mn>
                                                  </m:msup>
                                                  </m:mfrac>
                                                </m:mfrac>
                                            </m:mtd>
                                        </m:mtr>
                                        <m:mtr>
                                            <m:mtd columnalign="right"/>
                                            <m:mtd columnalign="center">
                                                <m:mo>=</m:mo>
                                            </m:mtd>
                                            <m:mtd columnalign="left">
                                                <m:mfrac>
                                                  <m:mi>mNumTopEval</m:mi>
                                                  <m:mrow>
                                                  <m:mn>1</m:mn>
                                                  <m:mi>sSignB</m:mi>
                                                  <m:mi>iAbsB</m:mi>
                                                  <m:mo>×</m:mo>
                                                  <m:mi>iD</m:mi>
                                                  <m:mi>sSignC</m:mi>
                                                  <m:mi>iAbsC</m:mi>
                                                  <m:mo>×</m:mo>
                                                  <m:msup>
                                                  <m:mi>iD</m:mi>
                                                  <m:mn>2</m:mn>
                                                  </m:msup>
                                                  </m:mrow>
                                                </m:mfrac>
                                            </m:mtd>
                                        </m:mtr>
                                        <m:mtr>
                                            <m:mtd columnalign="right"/>
                                            <m:mtd columnalign="center">
                                                <m:mo>=</m:mo>
                                            </m:mtd>
                                            <m:mtd columnalign="left">
                                                <m:mfrac>
                                                  <m:mi>iNumEval</m:mi>
                                                  <m:mi>iDenEval</m:mi>
                                                </m:mfrac>
                                            </m:mtd>
                                        </m:mtr>
                                        <m:mtr>
                                            <m:mtd columnalign="right"/>
                                            <m:mtd columnalign="center">
                                                <m:mo>=</m:mo>
                                            </m:mtd>
                                            <m:mtd columnalign="left">
                                                <m:mi>mAns</m:mi>
                                            </m:mtd>
                                        </m:mtr>
                                    </m:mtable>
                                    <m:annotation encoding="SnuggleTeX"
                                        >\begin{eqnarray*}f(\qv{mVal})
                                        &amp;=&amp;\frac{\qv{mVal}\qv{sSignA}\qv{iAbsA}}{(\qv{mVal})^2\qv{sSignB}\qv{iAbsB}\times(\qv{mVal})\qv{sSignC}\qv{iAbsC}}\\
                                        &amp;=&amp;\frac{
                                        \frac{1\qv{sSignA}\qv{iAbsA}\times\qv{iD}}{\qv{iD}}}{\frac{1\qv{sSignB}\qv{iAbsB}\times\qv{iD}\qv{sSignC}\qv{iAbsC}\times\qv{iD}^2}{\qv{iD}^2}}
                                        \\ &amp;=&amp;\frac{
                                        \qv{mNumTopEval}}{1\qv{sSignB}\qv{iAbsB}\times\qv{iD}\qv{sSignC}\qv{iAbsC}\times\qv{iD}^2}\\
                                        &amp;=&amp;\frac{ \qv{iNumEval}}{\qv{iDenEval}}\\
                                        &amp;=&amp;\qv{mAns} \end{eqnarray*}</m:annotation>
                                </m:semantics>
                            </m:math>
                        </p>
                    </div>
                </div>
            </feedbackBlock>
            <feedbackBlock id="feedbackBlock6" identifier="HINT" outcomeIdentifier="FEEDBACK"
                showHide="show">
                <p>Substitute for <printedVariable id="printedVariable1" identifier="mVal"/> in f(x)
                    and simplify the result.</p>
            </feedbackBlock>
            <feedbackBlock id="feedbackBlock7" identifier="SEEN-SOLUTION"
                outcomeIdentifier="FEEDBACK" showHide="show">
                <p>Since you have viewed the solution, your score for this question will be 0.</p>
            </feedbackBlock>
            <feedbackBlock id="feedbackBlock8" identifier="SEEN-HINT" outcomeIdentifier="FEEDBACK"
                showHide="show">
                <p>Since you have viewed the hint, your score for this question will be halved.</p>
            </feedbackBlock>
            <feedbackBlock id="feedbackBlock9" identifier="askhint" outcomeIdentifier="ASKHINT"
                showHide="show">
                <p>
                    <endAttemptInteraction id="endAttemptInteraction1"
                        responseIdentifier="HINTREQUEST" title="Show Hint"/>
                </p>
            </feedbackBlock>
            <feedbackBlock id="feedbackBlock10" identifier="asksolution"
                outcomeIdentifier="ASKSOLUTION" showHide="show">
                <p>
                    <endAttemptInteraction id="endAttemptInteraction2"
                        responseIdentifier="SOLREQUEST" title="Show Solution"/>
                </p>
            </feedbackBlock>
        </div>
    </itemBody>
    <responseProcessing>
        <setOutcomeValue identifier="FEEDBACK">
            <multiple>
                <variable identifier="EMPTY"/>
            </multiple>
        </setOutcomeValue>
        <responseCondition>
            <responseIf>
                <variable identifier="HINTREQUEST"/>
                <setOutcomeValue identifier="FEEDBACK">
                    <multiple>
                        <baseValue baseType="identifier">HINT</baseValue>
                    </multiple>
                </setOutcomeValue>
                <setOutcomeValue identifier="seenHint">
                    <baseValue baseType="boolean">true</baseValue>
                </setOutcomeValue>
                <setOutcomeValue identifier="ASKHINT">
                    <baseValue baseType="identifier">null</baseValue>
                </setOutcomeValue>
            </responseIf>
            <responseElseIf>
                <variable identifier="SOLREQUEST"/>
                <setOutcomeValue identifier="FEEDBACK">
                    <multiple>
                        <baseValue baseType="identifier">SOLUTION</baseValue>
                    </multiple>
                </setOutcomeValue>
                <setOutcomeValue identifier="seenSolution">
                    <baseValue baseType="boolean">true</baseValue>
                </setOutcomeValue>
                <setOutcomeValue identifier="ASKHINT">
                    <baseValue baseType="identifier">null</baseValue>
                </setOutcomeValue>
                <setOutcomeValue identifier="ASKSOLUTION">
                    <baseValue baseType="identifier">null</baseValue>
                </setOutcomeValue>
                <setOutcomeValue identifier="completionStatus">
                    <baseValue baseType="identifier">completed</baseValue>
                </setOutcomeValue>
            </responseElseIf>
            <responseElse>
                <responseCondition>
                    <responseIf>
                        <isNull>
                            <variable identifier="RESPONSE"/>
                        </isNull>
                        <setOutcomeValue identifier="SCORE">
                            <baseValue baseType="float">0</baseValue>
                        </setOutcomeValue>
                    </responseIf>
                    <responseElseIf>
                        <customOperator class="org.qtitools.mathassess.CasCompare"
                            ma:action="syntequal" ma:simplify="false" ma:syntax="text/x-maxima">
                            <variable identifier="RESPONSE"/>
                            <variable identifier="mAns"/>
                        </customOperator>
                        <setOutcomeValue identifier="FEEDBACK">
                            <multiple>
                                <baseValue baseType="identifier">CORRECT</baseValue>
                            </multiple>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="SCORE">
                            <baseValue baseType="float">2</baseValue>
                        </setOutcomeValue>
                    </responseElseIf>
                    <responseElse>
                        <setOutcomeValue identifier="odummy">
                            <customOperator class="org.qtitools.mathassess.ScriptRule"
                                ma:simplify="false" ma:syntax="text/x-maxima">
                                <baseValue baseType="string"><![CDATA[

 termsOK : true;

 polyOK: block([simp:true], if polynomialp(RESPONSE,listofvars(mAns))then true else false );

 equalp(p,q):= block([simp:false], if p=q then return(true) else return(false) )$ isEqual: equalp(RESPONSE,mAns);

 equivp(p,q):= block([simp:true], if is(equal(p,q))=true then return(true) else return(false) )$ isEquiv: equivp(RESPONSE,mAns);

 oInput:RESPONSE;
 isBadSign: equalp(RESPONSE,mBadSign);
 isBadSignEquiv: equivp(RESPONSE,mBadSign);

 

]]></baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <responseCondition>
                            <responseIf>
                                <variable identifier="isEqual"/>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">2</baseValue>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">CORRECT2</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                            </responseIf>
                            <responseElseIf>
                                <variable identifier="isEquiv"/>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">1</baseValue>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">CORRECT3</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElseIf>
                                <variable identifier="isBadSign"/>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">1</baseValue>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">SIGN1</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElseIf>
                                <variable identifier="isBadSignEquiv"/>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0.5</baseValue>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">SIGN2</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElse>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">INCORRECT</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0</baseValue>
                                </setOutcomeValue>
                            </responseElse>
                        </responseCondition>
                    </responseElse>
                </responseCondition>
                <responseCondition>
                    <responseIf>
                        <variable identifier="seenSolution"/>
                        <setOutcomeValue identifier="FEEDBACK">
                            <multiple>
                                <variable identifier="FEEDBACK"/>
                                <baseValue baseType="identifier">SEEN-SOLUTION</baseValue>
                            </multiple>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="SCORE">
                            <baseValue baseType="float">0.0</baseValue>
                        </setOutcomeValue>
                    </responseIf>
                    <responseElseIf>
                        <variable identifier="seenHint"/>
                        <setOutcomeValue identifier="FEEDBACK">
                            <multiple>
                                <variable identifier="FEEDBACK"/>
                                <baseValue baseType="identifier">SEEN-HINT</baseValue>
                            </multiple>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="SCORE">
                            <divide>
                                <variable identifier="SCORE"/>
                                <baseValue baseType="float">2.0</baseValue>
                            </divide>
                        </setOutcomeValue>
                    </responseElseIf>
                </responseCondition>
                <responseCondition>
                    <responseIf>
                        <gt>
                            <variable identifier="numAttempts"/>
                            <baseValue baseType="integer">3</baseValue>
                        </gt>
                        <setOutcomeValue identifier="FEEDBACK">
                            <multiple>
                                <baseValue baseType="identifier">THREETRIES</baseValue>
                                <baseValue baseType="identifier">SOLUTION</baseValue>
                            </multiple>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="completionStatus">
                            <baseValue baseType="identifier">completed</baseValue>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="ASKHINT">
                            <baseValue baseType="identifier">null</baseValue>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="ASKSOLUTION">
                            <baseValue baseType="identifier">null</baseValue>
                        </setOutcomeValue>
                    </responseIf>
                </responseCondition>
            </responseElse>
        </responseCondition>
    </responseProcessing>
</assessmentItem>

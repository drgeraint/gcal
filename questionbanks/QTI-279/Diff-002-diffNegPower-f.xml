<?xml version="1.0" encoding="UTF-8"?>
<assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p1"
    xmlns:m="http://www.w3.org/1998/Math/MathML"
    xmlns:ma="http://mathassess.qtitools.org/xsd/mathassess"
    xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" adaptive="true" identifier="Diff-002-diffNegPower-f"
    timeDependent="false" title="Differentiate ax^b, a integer, b lt 0, as negative power"
    toolName="Mathqurate" toolVersion="1.0"
    xsi:schemaLocation="http://www.imsglobal.org/xsd/imsqti_v2p1 imsqti_v2p1.xsd http://mathassess.qtitools.org/xsd/mathassess mathassess.xsd">
    <responseDeclaration baseType="string" cardinality="single" identifier="pInput"/>
    <responseDeclaration baseType="boolean" cardinality="single" identifier="HINTREQUEST"/>
    <responseDeclaration baseType="boolean" cardinality="single" identifier="SOLREQUEST"/>
    <responseDeclaration cardinality="record" identifier="RESPONSE"/>
    <outcomeDeclaration baseType="identifier" cardinality="multiple" identifier="FEEDBACK"/>
    <outcomeDeclaration baseType="identifier" cardinality="single" identifier="EMPTY"/>
    <outcomeDeclaration baseType="float" cardinality="single" identifier="SCORE" normalMaximum="2.0"
        normalMinimum="0.0">
        <defaultValue>
            <value>0.0</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="seenSolution">
        <defaultValue>
            <value>false</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="seenHint">
        <defaultValue>
            <value>false</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="identifier" cardinality="single" identifier="ASKHINT">
        <defaultValue>
            <value>askhint</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="identifier" cardinality="single" identifier="ASKSOLUTION">
        <defaultValue>
            <value>asksolution</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration cardinality="record" identifier="oInput"/>
    <outcomeDeclaration baseType="string" cardinality="single" identifier="opInput"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob1"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob2"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob3"/>
    <outcomeDeclaration identifier="ob4" cardinality="single" baseType="boolean"/>
    <outcomeDeclaration identifier="ob5" cardinality="single" baseType="boolean"/>
    <outcomeDeclaration identifier="ob6" cardinality="single" baseType="boolean"/>
    <outcomeDeclaration identifier="ob7" cardinality="single" baseType="boolean"/>
    <outcomeDeclaration identifier="ob8" cardinality="single" baseType="boolean"/>
    <outcomeDeclaration identifier="ob9" cardinality="single" baseType="boolean"/>
    <templateDeclaration baseType="boolean" cardinality="single" identifier="tDummy"
        mathVariable="false" paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mX" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mQues" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mDeriv" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mInt" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iA" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iB" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iAB"
        mathVariable="true" paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iBm1"
        mathVariable="true" paramVariable="false"/>
    <templateProcessing>
        <setTemplateValue identifier="tDummy">
            <customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                <baseValue baseType="string"><![CDATA[

 simp:true;

 s1 : make_random_state(true)$ set_random_state(s1);

 iA: ev((random(6)+2)*(random(2)*2-1),simp);

 iB: ev(-(random(4)+2),simp);

 iAB: ev(iA*iB,simp);

 iBm1: ev(iB-1,simp);

 array(aarr,18);

 fillarray(aarr,[a,b,c,d,h,k,m,n,p,q,r,s,t,u,v,w,x,y,z]);

 mX:aarr[random(18)];

 mQues: iA*mX^iB;

 mDeriv: diff(mQues,mX);

 mInt: integrate(mQues,mX);

]]></baseValue>
            </customOperator>
        </setTemplateValue>
    </templateProcessing>
    <itemBody class="">
        <div class="">
            <p>Find&#160;<m:math id="mathML41">
                <m:semantics>
                    <m:mrow>
                        <m:msup>
                            <m:mi>f</m:mi>
                            <m:mo>&#x2032;</m:mo>
                        </m:msup>
                        <m:mfenced close=")" open="(">
                            <m:mi>mX</m:mi>
                        </m:mfenced>
                    </m:mrow>
                    <m:annotation encoding="SnuggleTeX">\[f^&#x2032;(\qv{mX})\]</m:annotation>
                </m:semantics>
            </m:math>&#160;if
            </p>
            <div class="">
                <m:math display="block" id="mathML0">
                    <m:semantics>
                        <m:mrow>
                            <m:mi>f</m:mi>
                            <m:mfenced close=")" open="(">
                                <m:mi>mX</m:mi>
                            </m:mfenced>
                            <m:mo>=</m:mo>
                            <m:mi>iA</m:mi>
                            <m:msup>
                                <m:mi>mX</m:mi>
                                <m:mi>iB</m:mi>
                            </m:msup>
                        </m:mrow>
                        <m:annotation encoding="LaTeX">\[f(\qv{mX})=\qv{iA}\qv{mX}^{\qv{iB}}\]</m:annotation>
                    </m:semantics>
                </m:math>
            </div>
            <div class="">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <m:math display="block" id="mathML43">
                                    <m:semantics>
                                        <m:mrow>
                                            <m:msup>
                                                <m:mi>f</m:mi>
                                                <m:mo>&#x2032;</m:mo>
                                            </m:msup>
                                            <m:mfenced close=")" open="(">
                                                <m:mi>mX</m:mi>
                                            </m:mfenced>
                                            <m:mo>=</m:mo>
                                        </m:mrow>
                                        <m:annotation encoding="SnuggleTeX">\[f^&#x2032;(\qv{mX})=\]</m:annotation>
                                    </m:semantics>
                                </m:math>
                            </td>
                            <td>
                                <customInteraction class="org.qtitools.mathassess.MathEntryInteraction"
                                    responseIdentifier="RESPONSE" ma:printIdentifier="pInput" ma:syntax="text/x-maxima"
                                    ma:expectedLength="15" id="customInteraction0"/>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="">
                <feedbackInline id="feedbackInline0" identifier="Integrated"
                    outcomeIdentifier="FEEDBACK" showHide="show"> You integrated! </feedbackInline>
            </div>
            <div class="">
                <feedbackInline id="feedbackInline1" identifier="Original"
                    outcomeIdentifier="FEEDBACK" showHide="show"> Your input is equivalent to the
                    expression in the question. </feedbackInline>
            </div>
            <div class="">
                <feedbackInline id="feedbackInline2" identifier="Incorrect"
                    outcomeIdentifier="FEEDBACK" showHide="show"> Incorrect - please see the
                    solution. </feedbackInline>
            </div>
            <div class="">
                <feedbackInline id="feedbackInline3" identifier="Correct"
                    outcomeIdentifier="FEEDBACK" showHide="show"> Good, you have successfully
                    differentiated the expression. </feedbackInline>
            </div>
            <div class="">
                <feedbackInline id="feedbackInline4" showHide="show" outcomeIdentifier="FEEDBACK"
                    identifier="MultNoRed"> You multiplied by the power, but you did not reduce the
                    power by 1 - see the solution. </feedbackInline></div>
            <div class="">
                <feedbackInline id="feedbackInline5" showHide="show" outcomeIdentifier="FEEDBACK"
                    identifier="NoMultRed"> You reduced the power by 1 but you had not multiplied by
                    the power - see the solution. </feedbackInline></div>
            <div class="">
                <feedbackInline id="feedbackInline6" showHide="show" outcomeIdentifier="FEEDBACK"
                    identifier="RedThenMul"> You should multiply by the power before reducing the
                    power by 1 - see the solution. </feedbackInline></div>
            <div class="">
                <feedbackInline id="feedbackInline7" showHide="show" outcomeIdentifier="FEEDBACK"
                    identifier="MultInc"> You multiplied by the power, but you increased the power
                    by 1 - see the solution. </feedbackInline></div>
            <div class="">
                <feedbackInline id="feedbackInline8" showHide="show" outcomeIdentifier="FEEDBACK"
                    identifier="RedDiv"> You reduced the power by 1 but you divided by the power -
                    see the solution. </feedbackInline></div>
            <div class="">
                <feedbackInline id="feedbackInline9" showHide="show" outcomeIdentifier="FEEDBACK"
                    identifier="IncThenMul"> You increased the power by 1 and multiplied by the
                    power - see the solution. </feedbackInline></div>
            <div class="">
                <feedbackBlock id="feedbackBlock4" identifier="THREETRIES"
                    outcomeIdentifier="FEEDBACK" showHide="show">
                    <p> You have had three attempts at answering this question, so here is the
                        solution: </p>
                </feedbackBlock>
                <feedbackBlock class="" id="feedbackBlock5" identifier="SOLUTION"
                    outcomeIdentifier="FEEDBACK" showHide="show">
                    <div class="">
                        <p class="">To differentiate this expression, we "multiply by the power", so
                            the coefficient becomes</p>
                        <m:math display="block" id="mathML1">
                            <m:semantics>
                                <m:mrow>
                                    <m:mi>iA</m:mi>
                                    <m:mo>×</m:mo>
                                    <m:mfenced close=")" open="(">
                                        <m:mi>iB</m:mi>
                                    </m:mfenced>
                                    <m:mo>=</m:mo>
                                    <m:mi>iAB</m:mi>
                                </m:mrow>
                                <m:annotation encoding="SnuggleTeX">\[
                                    \qv{iA}\times(\qv{iB})=\qv{iAB}\]</m:annotation>
                            </m:semantics>
                        </m:math>
                        <p class="">Then we "reduce the power by 1"</p>
                        <m:math display="block" id="mathML2">
                            <m:semantics>
                                <m:mrow>
                                    <m:mi>iB</m:mi>
                                    <m:mo>-</m:mo>
                                    <m:mn>1</m:mn>
                                    <m:mo>=</m:mo>
                                    <m:mi>iBm1</m:mi>
                                </m:mrow>
                                <m:annotation encoding="LaTeX">\[
                                    \qv{iB}-1=\qv{iBm1}\]</m:annotation>
                            </m:semantics>
                        </m:math>
                        <p class="">
                            <m:math display="block" id="mathML01">
                                <m:semantics>
                                    <m:mrow>
                                        <m:msup>
                                            <m:mi>f</m:mi>
                                            <m:mo>&#x2032;</m:mo>
                                        </m:msup>
                                        <m:mfenced close=")" open="(">
                                            <m:mi>mX</m:mi>
                                        </m:mfenced>
                                        <m:mo>=</m:mo>
                                        <m:mrow>
                                            <m:mi>iAB</m:mi>
                                            <m:msup>
                                                <m:mi>mX</m:mi>
                                                <m:mi>iBm1</m:mi>
                                            </m:msup>
                                        </m:mrow>
                                    </m:mrow>
                                    <m:annotation encoding="LaTeX">\[f^&#x2032;(\qv{mX})=\qv{iAB}\qv{mX}^{\qv{iBm1}}\]</m:annotation>
                                </m:semantics>
                            </m:math>
                        </p>
                    </div>
                </feedbackBlock>
            </div>
            <div class="">
                <feedbackBlock id="feedbackBlock6" identifier="HINT" outcomeIdentifier="FEEDBACK"
                    showHide="show">
                    <p>Multiply by the power and reduce the power by 1.</p>
                </feedbackBlock>
            </div>
            <feedbackBlock id="feedbackBlock7" identifier="SEEN-SOLUTION"
                outcomeIdentifier="FEEDBACK" showHide="show">
                <p> Since you have viewed the solution, your score for this question will be 0. </p>
            </feedbackBlock>
            <feedbackBlock id="feedbackBlock8" identifier="SEEN-HINT" outcomeIdentifier="FEEDBACK"
                showHide="show">
                <p> Since you have viewed the hint, your score for this question will be halved.
                </p>
            </feedbackBlock>
            <feedbackBlock id="feedbackBlock9" identifier="askhint" outcomeIdentifier="ASKHINT"
                showHide="show">
                <p>
                    <endAttemptInteraction id="endAttemptInteraction1"
                        responseIdentifier="HINTREQUEST" title="Show Hint"/>
                </p>
            </feedbackBlock>
            <feedbackBlock id="feedbackBlock10" identifier="asksolution"
                outcomeIdentifier="ASKSOLUTION" showHide="show">
                <p>
                    <endAttemptInteraction id="endAttemptInteraction2"
                        responseIdentifier="SOLREQUEST" title="Show Solution"/>
                </p>
            </feedbackBlock>
        </div>
    </itemBody>
    <responseProcessing>
        <setOutcomeValue identifier="FEEDBACK">
            <multiple>
                <variable identifier="EMPTY"/>
            </multiple>
        </setOutcomeValue>
        <responseCondition>
            <responseIf>
                <variable identifier="HINTREQUEST"/>
                <setOutcomeValue identifier="FEEDBACK">
                    <multiple>
                        <baseValue baseType="identifier">HINT</baseValue>
                    </multiple>
                </setOutcomeValue>
                <setOutcomeValue identifier="seenHint">
                    <baseValue baseType="boolean">true</baseValue>
                </setOutcomeValue>
            </responseIf>
            <responseElseIf>
                <variable identifier="SOLREQUEST"/>
                <setOutcomeValue identifier="FEEDBACK">
                    <multiple>
                        <baseValue baseType="identifier">SOLUTION</baseValue>
                    </multiple>
                </setOutcomeValue>
                <setOutcomeValue identifier="seenSolution">
                    <baseValue baseType="boolean">true</baseValue>
                </setOutcomeValue>
                <setOutcomeValue identifier="completionStatus">
                    <baseValue baseType="identifier">completed</baseValue>
                </setOutcomeValue>
                <setOutcomeValue identifier="ASKHINT">
                    <baseValue baseType="identifier">null</baseValue>
                </setOutcomeValue>
                <setOutcomeValue identifier="ASKSOLUTION">
                    <baseValue baseType="identifier">null</baseValue>
                </setOutcomeValue>
            </responseElseIf>
            <responseElse>
                <responseCondition>
                    <responseIf>
                        <isNull>
                            <variable identifier="RESPONSE"/>
                        </isNull>
                        <setOutcomeValue identifier="SCORE">
                            <baseValue baseType="float">0</baseValue>
                        </setOutcomeValue>
                    </responseIf>
                    <responseElse>
                        <setOutcomeValue identifier="oInput">
                            <customOperator class="org.qtitools.mathassess.CasProcess"
                                ma:returnType="mathsContent" ma:syntax="text/x-maxima">
                                <baseValue baseType="string"><![CDATA[ev(RESPONSE,simp);]]></baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="ob1">
                            <customOperator class="org.qtitools.mathassess.CasProcess"
                                ma:returnType="boolean" ma:syntax="text/x-maxima">
                                <baseValue baseType="string"><![CDATA[is(is(equal(RESPONSE,mDeriv))=true);]]></baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="ob2">
                            <customOperator class="org.qtitools.mathassess.CasProcess"
                                ma:returnType="boolean" ma:syntax="text/x-maxima">
                                <baseValue baseType="string"><![CDATA[is(is(equal(ev(diff(RESPONSE,mX),simp),mQues))=true);]]></baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="ob3">
                            <customOperator class="org.qtitools.mathassess.CasProcess"
                                ma:returnType="boolean" ma:syntax="text/x-maxima">
                                <baseValue baseType="string"><![CDATA[is(is(equal(RESPONSE,mQues))=true); ]]></baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="ob4">
                            <customOperator class="org.qtitools.mathassess.CasProcess"
                                ma:syntax="text/x-maxima" ma:returnType="boolean">
                                <baseValue baseType="string"><![CDATA[ is(is(equal(RESPONSE,ev(mQues*iB,simp)))=true);]]></baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="ob5">
                            <customOperator class="org.qtitools.mathassess.CasProcess"
                                ma:syntax="text/x-maxima" ma:returnType="boolean">
                                <baseValue baseType="string"><![CDATA[ is(is(equal(ev(RESPONSE*mX,simp),mQues))=true);]]></baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="ob6">
                            <customOperator class="org.qtitools.mathassess.CasProcess"
                                ma:syntax="text/x-maxima" ma:returnType="boolean">
                                <baseValue baseType="string"><![CDATA[ is(is(equal(ev(RESPONSE*iB,simp),ev(mDeriv*iBm1,simp)))=true);]]></baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="ob7">
                            <customOperator class="org.qtitools.mathassess.CasProcess"
                                ma:syntax="text/x-maxima" ma:returnType="boolean">
                                <baseValue baseType="string"><![CDATA[ is(is(equal(RESPONSE,ev(mDeriv*mX^2,simp)))=true);]]></baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="ob8">
                            <customOperator class="org.qtitools.mathassess.CasProcess"
                                ma:syntax="text/x-maxima" ma:returnType="boolean">
                                <baseValue baseType="string"><![CDATA[ is(is(equal(RESPONSE,ev(mQues/mX/iBm1,simp)))=true);]]></baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="ob9">
                            <customOperator class="org.qtitools.mathassess.CasProcess"
                                ma:syntax="text/x-maxima" ma:returnType="boolean">
                                <baseValue baseType="string"><![CDATA[ is(is(equal(RESPONSE,ev(mQues*mX*(iB+1),simp)))=true);]]></baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <setOutcomeValue identifier="opInput">
                            <fieldValue fieldIdentifier="PMathML">
                                <variable identifier="oInput"/>
                            </fieldValue>
                        </setOutcomeValue>
                        <responseCondition>
                            <responseIf>
                                <variable identifier="ob1"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">Correct</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">2</baseValue>
                                </setOutcomeValue>
                            </responseIf>
                            <responseElseIf>
                                <variable identifier="ob2"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">Integrated</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0</baseValue>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElseIf>
                                <variable identifier="ob3"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">Original</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0</baseValue>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElseIf>
                                <variable identifier="ob4"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">MultNoRed</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0</baseValue>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElseIf>
                                <variable identifier="ob5"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">NoMultRed</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0</baseValue>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElseIf>
                                <variable identifier="ob6"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">RedThenMul</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0</baseValue>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElseIf>
                                <variable identifier="ob7"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">MultInc</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0</baseValue>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElseIf>
                                <variable identifier="ob8"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">RedDiv</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0</baseValue>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElseIf>
                                <variable identifier="ob9"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">IncThenMul</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0</baseValue>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElse>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">Incorrect</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0</baseValue>
                                </setOutcomeValue>
                            </responseElse>
                        </responseCondition>
                        <responseCondition>
                            <responseIf>
                                <gt>
                                    <variable identifier="numAttempts"/>
                                    <baseValue baseType="integer">                                            3                                        </baseValue>
                                </gt>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">                                                THREETRIES                                            </baseValue>
                                        <baseValue baseType="identifier">                                                SOLUTION                                            </baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="completionStatus">
                                    <baseValue baseType="identifier">                                            completed                                        </baseValue>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="ASKHINT">
                                    <baseValue baseType="identifier">                                            null                                        </baseValue>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="ASKSOLUTION">
                                    <baseValue baseType="identifier">                                            null                                        </baseValue>
                                </setOutcomeValue>
                            </responseIf>
                        </responseCondition>
                        <responseCondition>
                            <responseIf>
                                <variable identifier="seenSolution"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <variable identifier="FEEDBACK"/>
                                        <baseValue baseType="identifier">SEEN-SOLUTION</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0.0</baseValue>
                                </setOutcomeValue>
                            </responseIf>
                            <responseElseIf>
                                <variable identifier="seenHint"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <variable identifier="FEEDBACK"/>
                                        <baseValue baseType="identifier">SEEN-HINT</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <divide>
                                        <variable identifier="SCORE"/>
                                        <baseValue baseType="float">2.0</baseValue>
                                    </divide>
                                </setOutcomeValue>
                            </responseElseIf>
                        </responseCondition>
                    </responseElse>
                </responseCondition>
            </responseElse>
        </responseCondition>
    </responseProcessing>
</assessmentItem>

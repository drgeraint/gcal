<?xml version="1.0" encoding="UTF-8"?>
<assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p1"
    xmlns:m="http://www.w3.org/1998/Math/MathML"
    xmlns:ma="http://mathassess.qtitools.org/xsd/mathassess"
    xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" adaptive="true"
    identifier="Test06-trigFuncs-kcosxpa" timeDependent="false"
    title="Express acos(x) - bsin(x) in the form kcos(x+A)" toolName="Mathqurate"
    toolVersion="1.0" xml:lang="en"
    xsi:schemaLocation="http://www.imsglobal.org/xsd/imsqti_v2p1 imsqti_v2p1.xsd http://mathassess.qtitools.org/xsd/mathassess mathassess.xsd">
    <responseDeclaration cardinality="record" identifier="RESPONSE"/>
    <responseDeclaration baseType="boolean" cardinality="single" identifier="HINTREQUEST"/>
    <responseDeclaration baseType="boolean" cardinality="single" identifier="SOLREQUEST"/>
    <outcomeDeclaration baseType="float" cardinality="single" identifier="SCORE" normalMaximum="2.0"
        normalMinimum="0.0">
        <defaultValue>
            <value>0.0</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="seenSolution">
        <defaultValue>
            <value>false</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="seenHint">
        <defaultValue>
            <value>false</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="identifier" cardinality="single" identifier="ASKHINT">
        <defaultValue>
            <value>askhint</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="identifier" cardinality="single" identifier="ASKSOLUTION">
        <defaultValue>
            <value>asksolution</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob1"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob2"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob3"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob4"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob5"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="oDummy"/>
    <outcomeDeclaration baseType="identifier" cardinality="multiple" identifier="FEEDBACK"/>
    <outcomeDeclaration baseType="identifier" cardinality="single" identifier="EMPTY"/>
    <templateDeclaration baseType="boolean" cardinality="single" identifier="inTest">
        <defaultValue>
            <value>false</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="identifier" cardinality="multiple" identifier="tHide"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="nTries"
        mathVariable="false" paramVariable="false">
        <defaultValue>
            <value>3</value>
        </defaultValue>
    </templateDeclaration>
    <templateDeclaration baseType="boolean" cardinality="single" identifier="tDummy"
        mathVariable="true" paramVariable="false"/>
    <templateDeclaration baseType="identifier" cardinality="single" identifier="tParts" mathVariable="false"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iFunc" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iOrd" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iTemp" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iK" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iA" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iB" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iA2" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iB2" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="i90mAlpha" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="float" cardinality="single" identifier="fTanAlpha" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="float" cardinality="single" identifier="fAlpha" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iAlpha" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mQues" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mAns" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mBadSign" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration cardinality="record" identifier="mBadAngle" mathVariable="true"
        paramVariable="false"/>
    <templateProcessing>
        <!-- 
calc    bnd = 12
do      common,randu
calc    a = 2*rnd+1
        k = ((a*a)+1)/2
        b = k-1
calc    bnd = 2
do      common,randu
calcs   rnd==1;temp = a;;
calcs   rnd==1;a = b;;
calcs   rnd==1;b = temp;;
*
calc    ans1 = atan(b/a)*(180/pi)
packz   ans;;<%#s,k>%#sin(x-<%#s,ans1,10,0>%#)


calc    bnd = 12
do      common,randu
calc    a = 2*rnd+1
        k = ((a*a)+1)/2
        b = k-1
calc    bnd = 2
do      common,randu
calcs   rnd==1;temp = a;;
calcs   rnd==1;a = b;;
calcs   rnd==1;b = temp;;
*
calc    ans1 = atan(b/a)*(180/pi)
packz   ans;;<%#s,k>%#cos(x-<%#s,ans1,10,0>%#)
        -->
        <templateCondition>
            <templateIf>
                <variable identifier="inTest"/>
                <setTemplateValue identifier="tHide">
                    <multiple>
                        <baseValue baseType="identifier">InputFeedback</baseValue>
                        <baseValue baseType="identifier">TriesMessage</baseValue>
                        <baseValue baseType="identifier">SolHintFeedback</baseValue>
                        <baseValue baseType="identifier">SolHintButtons</baseValue>
                    </multiple>
                </setTemplateValue>
            </templateIf>
        </templateCondition>
        
        <setTemplateValue identifier="iOrd">
            <randomInteger min="1" max="2"/>
        </setTemplateValue>
        <setTemplateValue identifier="iFunc">
            <baseValue baseType="integer">4</baseValue>
        </setTemplateValue>
        <setTemplateValue identifier="iA">
            <sum>
                <product>
                    <randomInteger max="12" min="1"/>
                    <baseValue baseType="integer">2</baseValue>
                </product>
                <baseValue baseType="integer">1</baseValue>
            </sum>
        </setTemplateValue>
        <setTemplateValue identifier="iK">
            <round>
                <divide>
                    <sum>
                        <power>
                            <variable identifier="iA"/>
                            <baseValue baseType="integer">2</baseValue>
                        </power>
                        <baseValue baseType="integer">1</baseValue>
                    </sum>
                    <baseValue baseType="integer">2</baseValue>
                </divide>
            </round>
        </setTemplateValue>
        <setTemplateValue identifier="iB">
            <subtract>
                <variable identifier="iK"/>
                <baseValue baseType="integer">1</baseValue>
            </subtract>
        </setTemplateValue>
        <templateCondition>
            <templateIf>
                <lt>
                    <variable identifier="iOrd"/>
                    <baseValue baseType="integer">2</baseValue>
                </lt>
                <setTemplateValue identifier="iTemp">
                    <variable identifier="iA"/>
                </setTemplateValue>
                <setTemplateValue identifier="iA">
                    <variable identifier="iB"/>
                </setTemplateValue>
                <setTemplateValue identifier="iB">
                    <variable identifier="iTemp"/>
                </setTemplateValue>
            </templateIf>
        </templateCondition>
        <setTemplateValue identifier="iA2">
            <product>
                <variable identifier="iA"/>
                <variable identifier="iA"/>
            </product>
        </setTemplateValue>
        <setTemplateValue identifier="iB2">
            <product>
                <variable identifier="iB"/>
                <variable identifier="iB"/>
            </product>
        </setTemplateValue>
        <setTemplateValue identifier="fAlpha">
                <mathOperator name="atan2">
                    <variable identifier="iB"/>
                    <variable identifier="iA"/>
                </mathOperator>
        </setTemplateValue>
        <setTemplateValue identifier="iAlpha">
            <round>
                <divide>
                    <product>
                        <variable identifier="fAlpha"/>
                        <baseValue baseType="integer">180</baseValue>
                    </product>
                    <mathConstant name="pi"/>
                </divide>
            </round>
        </setTemplateValue>
        <setTemplateValue identifier="i90mAlpha">
            <subtract>
                <baseValue baseType="integer">90</baseValue>
                <variable identifier="iAlpha"/>
            </subtract>
        </setTemplateValue>
        <templateCondition>
            <templateIf>
                <equal toleranceMode="exact">
                    <variable identifier="iFunc"/>
                    <baseValue baseType="integer">1</baseValue>
                </equal>
                <setTemplateValue identifier="tDummy">
                    <customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                        <baseValue baseType="string"><![CDATA[
                    mQues:iA*sin(x)-iB*cos(x);
                    mAns:iK*sin(x-iAlpha);
                    mBadSign:iK*sin(x+iAlpha);
                    mBadAngle:iK*sin(x-i90mAlpha);
                    ]]>
                        </baseValue>
                    </customOperator>
                </setTemplateValue>
            </templateIf>
            <templateElseIf>
                <equal toleranceMode="exact">
                    <variable identifier="iFunc"/>
                    <baseValue baseType="integer">2</baseValue>
                </equal>
                <setTemplateValue identifier="tDummy">
                    <customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                        <baseValue baseType="string"><![CDATA[
                    mQues:iA*cos(x)+iB*sin(x);
                    mAns:iK*cos(x-iAlpha);
                    mBadSign:iK*cos(x+iAlpha);
                    mBadAngle:iK*cos(x-i90mAlpha);
                    ]]>
                        </baseValue>
                    </customOperator>
                </setTemplateValue>
            </templateElseIf>
            <templateElseIf>
                <equal toleranceMode="exact">
                    <variable identifier="iFunc"/>
                    <baseValue baseType="integer">3</baseValue>
                </equal>
                <setTemplateValue identifier="tDummy">
                    <customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                        <baseValue baseType="string"><![CDATA[
                    mQues:iA*sin(x)+iB*cos(x);
                    mAns:iK*sin(x+iAlpha);
                    mBadSign:iK*sin(x-iAlpha);
                    mBadAngle:iK*sin(x+i90mAlpha);
                    ]]>
                        </baseValue>
                    </customOperator>
                </setTemplateValue>
            </templateElseIf>
            <templateElseIf>
                <equal toleranceMode="exact">
                    <variable identifier="iFunc"/>
                    <baseValue baseType="integer">4</baseValue>
                </equal>
                <setTemplateValue identifier="tDummy">
                    <customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                        <baseValue baseType="string"><![CDATA[
                    mQues:iA*cos(x)-iB*sin(x);
                    mAns:iK*cos(x+iAlpha);
                    mBadSign:iK*cos(x-iAlpha);
                    mBadAngle:iK*cos(x+i90mAlpha);
                    ]]>
                        </baseValue>
                    </customOperator>
                </setTemplateValue>
            </templateElseIf>
        </templateCondition>
        <!-- <setTemplateValue identifier="tDummy">
            <index n="iFunc">
                <ordered>
                    <customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                        <baseValue baseType="string"><![CDATA[
                    mQues:iA*sin(x)-iB*cos(x);
                    mAns:iK*sin(x-iAlpha);
                    ]]>
                        </baseValue>
                    </customOperator>
                    <customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                        <baseValue baseType="string"><![CDATA[
                    mQues:iA*cos(x)+iB*sin(x);
                    mAns:iK*cos(x-iAlpha);
                    ]]>
                        </baseValue>
                    </customOperator>
                    <customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                        <baseValue baseType="string"><![CDATA[
                    mQues:iA*sin(x)+iB*cos(x);
                    mAns:iK*sin(x+iAlpha);
                    ]]>
                        </baseValue>
                    </customOperator>
                    <customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                        <baseValue baseType="string"><![CDATA[
                    mQues:iA*cos(x)-iB*sin(x);
                    mAns:iK*cos(x+iAlpha);
                    ]]>
                        </baseValue>
                    </customOperator>
                </ordered>
            </index>
        </setTemplateValue> -->
        <setTemplateValue identifier="tParts">
            <index n="iFunc">
                <ordered>
                    <baseValue baseType="identifier">sinM</baseValue>
                    <baseValue baseType="identifier">cosM</baseValue>
                    <baseValue baseType="identifier">sinP</baseValue>
                    <baseValue baseType="identifier">cosP</baseValue>
                </ordered>
            </index>
        </setTemplateValue>
    </templateProcessing>
    <itemBody class="">
        <div>
            <p>Express <printedVariable identifier="mQues"/> in the form &#160;
                <templateInline templateIdentifier="tParts" identifier="sinM" showHide="show">
                    <m:math>
                        <m:mi>k</m:mi>
                        <m:mi>sin</m:mi>
                        <m:mfenced open="(" close=")">
                            <m:mrow>
                                <m:mi>x</m:mi>
                                <m:mo>-</m:mo>
                                <m:mi>&#x3b1;</m:mi>
                            </m:mrow>
                        </m:mfenced>
                    </m:math>
                </templateInline>
                <templateInline templateIdentifier="tParts" identifier="cosM" showHide="show">
                    <m:math>
                        <m:mi>k</m:mi>
                        <m:mi>cos</m:mi>
                        <m:mfenced open="(" close=")">
                            <m:mrow>
                                <m:mi>x</m:mi>
                                <m:mo>-</m:mo>
                                <m:mi>&#x3b1;</m:mi>
                            </m:mrow>
                        </m:mfenced>
                    </m:math>
                </templateInline>
                <templateInline templateIdentifier="tParts" identifier="sinP" showHide="show">
                    <m:math>
                        <m:mi>k</m:mi>
                        <m:mi>sin</m:mi>
                        <m:mfenced open="(" close=")">
                            <m:mrow>
                                <m:mi>x</m:mi>
                                <m:mo>+</m:mo>
                                <m:mi>&#x3b1;</m:mi>
                            </m:mrow>
                        </m:mfenced>
                    </m:math>
                </templateInline>
                <templateInline templateIdentifier="tParts" identifier="cosP" showHide="show">
                    <m:math>
                        <m:mi>k</m:mi>
                        <m:mi>cos</m:mi>
                        <m:mfenced open="(" close=")">
                            <m:mrow>
                                <m:mi>x</m:mi>
                                <m:mo>+</m:mo>
                                <m:mi>&#x3b1;</m:mi>
                            </m:mrow>
                        </m:mfenced>
                    </m:math>
                </templateInline>, giving the value of &#x3b1; to the nearest degree.
            </p>
        </div>
        <div class="">
           <customInteraction class="org.qtitools.mathassess.MathEntryInteraction" id="customInteraction0" ma:syntax="text/x-maxima" responseIdentifier="RESPONSE" ma:expectedLength="30"/>
        </div>
        <templateBlock templateIdentifier="tHide" identifier="InputFeedback"
            showHide="hide">
            <feedbackBlock identifier="Correct" outcomeIdentifier="FEEDBACK"
            showHide="show">
            <p>Correct</p>
        </feedbackBlock>
        <feedbackBlock identifier="NOTSIMP" outcomeIdentifier="FEEDBACK"
            showHide="show">
            <p>Your answer is not in its simplest form</p>
        </feedbackBlock>
        <feedbackBlock identifier="Coeff" outcomeIdentifier="FEEDBACK"
            showHide="show">
            <p>You don't seem to have taken the square root to find the coefficient k</p>
        </feedbackBlock>
        <feedbackBlock identifier="Sign" outcomeIdentifier="FEEDBACK"
            showHide="show">
            <p>You seem to have the wrong sign for the angle &#x3b1;. </p>
        </feedbackBlock>
        <feedbackBlock identifier="Angle" outcomeIdentifier="FEEDBACK"
            showHide="show">
            <p>You seem to have used <m:math>
                <m:mi>tan</m:mi>
                <m:mfenced open="(" close=")">
                    <m:mi>&#x3b1;</m:mi>
                </m:mfenced>
                <m:mo>=</m:mo>
                <m:mfrac>
                    <m:mi>a</m:mi>
                    <m:mi>b</m:mi>
                </m:mfrac> 
            </m:math> to get the angle &#x3b1;. </p>
        </feedbackBlock>
        <feedbackBlock identifier="Incorrect" outcomeIdentifier="FEEDBACK"
            showHide="show">
            <p>No, that's not correct.</p>
        </feedbackBlock>
        </templateBlock>
        <templateBlock templateIdentifier="tHide" identifier="TriesMessage" showHide="show">
            <p>You may attempt this question up to <printedVariable identifier="nTries"/> times
                during the test.</p>
        </templateBlock>
        <templateBlock templateIdentifier="tHide" identifier="SolHintFeedback" showHide="hide">
            <feedbackBlock id="feedbackBlock3" identifier="NoMoreTries"
                outcomeIdentifier="FEEDBACK" showHide="show">
                <p>You have had <printedVariable identifier="nTries"/> attempts at answering this question, so here is the
                    solution:</p>
            </feedbackBlock>
            <feedbackBlock id="feedbackBlock59" identifier="SOLUTION" outcomeIdentifier="FEEDBACK"
            showHide="show">
            <p><printedVariable identifier="mQues"/> can be expressed in the form&#160;
                <templateInline templateIdentifier="tParts" identifier="sinM" showHide="show">
                    <m:math>
                        <m:mi>k</m:mi>
                        <m:mi>sin</m:mi>
                        <m:mfenced open="(" close=")">
                            <m:mrow>
                                <m:mi>x</m:mi>
                                <m:mo>-</m:mo>
                                <m:mi>&#x3b1;</m:mi>
                            </m:mrow>
                        </m:mfenced>
                    </m:math>
                </templateInline>
                <templateInline templateIdentifier="tParts" identifier="cosM" showHide="show">
                    <m:math>
                        <m:mi>k</m:mi>
                        <m:mi>cos</m:mi>
                        <m:mfenced open="(" close=")">
                            <m:mrow>
                                <m:mi>x</m:mi>
                                <m:mo>-</m:mo>
                                <m:mi>&#x3b1;</m:mi>
                            </m:mrow>
                        </m:mfenced>
                    </m:math>
                </templateInline>
                <templateInline templateIdentifier="tParts" identifier="sinP" showHide="show">
                    <m:math>
                        <m:mi>k</m:mi>
                        <m:mi>sin</m:mi>
                        <m:mfenced open="(" close=")">
                            <m:mrow>
                                <m:mi>x</m:mi>
                                <m:mo>+</m:mo>
                                <m:mi>&#x3b1;</m:mi>
                            </m:mrow>
                        </m:mfenced>
                    </m:math>
                </templateInline>
                <templateInline templateIdentifier="tParts" identifier="cosP" showHide="show">
                    <m:math>
                        <m:mi>k</m:mi>
                        <m:mi>cos</m:mi>
                        <m:mfenced open="(" close=")">
                            <m:mrow>
                                <m:mi>x</m:mi>
                                <m:mo>+</m:mo>
                                <m:mi>&#x3b1;</m:mi>
                            </m:mrow>
                        </m:mfenced>
                    </m:math>
                </templateInline>
            </p>
            <div>
                <p>
                    <m:math display="block">            
                        <m:mtable>            
                            <m:mtr>                
                                <m:mtd columnalign="right">                    
                                    <m:msup>
                                        <m:mi>k</m:mi>
                                        <m:mn>2</m:mn>
                                    </m:msup>           
                                </m:mtd>                
                                <m:mtd>
                                    <m:mo>=</m:mo>
                                </m:mtd>                
                                <m:mtd columnalign="left">                    
                                    <m:mrow>
                                        <m:msup>
                                            <m:mi>iA</m:mi>
                                            <m:mn>2</m:mn>
                                        </m:msup>           
                                        <m:mo>+</m:mo>
                                        <m:msup>
                                            <m:mi>iB</m:mi>
                                            <m:mn>2</m:mn>
                                        </m:msup>           
                                    </m:mrow>        
                                </m:mtd>            
                            </m:mtr>            
                            <m:mtr>                
                                <m:mtd columnalign="right">
                                    <m:mi>k</m:mi>        
                                </m:mtd>                
                                <m:mtd>
                                    <m:mo>=</m:mo>
                                </m:mtd>                
                                <m:mtd columnalign="left">                    
                                    <m:msqrt>
                                        <m:mi>iA2</m:mi>
                                        <m:mo>+</m:mo>
                                        <m:mi>iB2</m:mi>
                                    </m:msqrt>        
                                </m:mtd>            
                            </m:mtr>            
                            <m:mtr>                
                                <m:mtd columnalign="right">
                                            
                                </m:mtd>                
                                <m:mtd>
                                    <m:mo>=</m:mo>
                                </m:mtd>                
                                <m:mtd columnalign="left">                    
                                    <m:mi>iK</m:mi>
                                </m:mtd>            
                            </m:mtr>            
                        </m:mtable>    
                    </m:math>
                </p>
                <p>
                    <m:math display="block">            
                        <m:mtable>            
                            <m:mtr>                
                                <m:mtd columnalign="right">                    
                                    <m:mi>tan</m:mi>
                                    <m:mfenced open="(" close=")">
                                        <m:mi>&#x3b1;</m:mi>
                                    </m:mfenced>
                                </m:mtd>                
                                <m:mtd>
                                    <m:mo>=</m:mo>
                                </m:mtd>                
                                <m:mtd columnalign="left">                    
                                    <m:mfrac>
                                        <m:mi>iB</m:mi>
                                        <m:mi>iA</m:mi>
                                    </m:mfrac> 
                                </m:mtd>            
                            </m:mtr>            
                            <m:mtr>                
                                <m:mtd columnalign="right">
                                    <m:mi>&#x3b1;</m:mi>        
                                </m:mtd>                
                                <m:mtd>
                                    <m:mo>=</m:mo>
                                </m:mtd>                
                                <m:mtd columnalign="left">                    
                                    <m:msup>
                                        <m:mi>tan</m:mi>
                                        <m:mn>-1</m:mn>
                                    </m:msup> 
                                    <m:mfenced open="(" close=")">
                                        <m:mfrac>
                                            <m:mi>iB</m:mi>
                                            <m:mi>iA</m:mi>
                                        </m:mfrac> 
                                    </m:mfenced>
                                </m:mtd>            
                            </m:mtr>            
                            <m:mtr>                
                                <m:mtd columnalign="right">
                                    
                                </m:mtd>                
                                <m:mtd>
                                    <m:mo>=</m:mo>
                                </m:mtd>                
                                <m:mtd columnalign="left">                    
                                    <m:mi>iAlpha</m:mi>
                                    <m:mtext>&#176;&#160;to the nearest degree</m:mtext>
                                </m:mtd>            
                            </m:mtr>            
                        </m:mtable>    
                    </m:math>
                </p>
            </div>
            <div>
                <p>Hence</p>
                <m:math display="block">
                    <m:mi>mQues</m:mi>
                    <m:mo>=</m:mo>
                    <m:mi>mAns</m:mi>
                </m:math>
            </div>
        </feedbackBlock>
        <feedbackBlock id="feedbackBlock11" identifier="HINT" outcomeIdentifier="FEEDBACK"
            showHide="show">
            <p>
                <m:math display="block">            
                    <m:msup>
                        <m:mi>k</m:mi>
                        <m:mn>2</m:mn>
                    </m:msup>           
                    <m:mo>=</m:mo>
                    <m:mrow>
                        <m:msup>
                            <m:mi>iA</m:mi>
                            <m:mn>2</m:mn>
                        </m:msup>           
                        <m:mo>+</m:mo>
                        <m:msup>
                            <m:mi>iB</m:mi>
                            <m:mn>2</m:mn>
                        </m:msup>           
                    </m:mrow> 
                </m:math>
            </p>
            <p>
                <m:math display="block">
                    <m:mi>tan</m:mi>
                    <m:mfenced open="(" close=")">
                        <m:mi>&#x3b1;</m:mi>
                    </m:mfenced>
                    <m:mo>=</m:mo>
                    <m:mfrac>
                        <m:mi>iB</m:mi>
                        <m:mi>iA</m:mi>
                    </m:mfrac> 
                </m:math>
            </p>
        </feedbackBlock>
        <feedbackBlock id="feedbackBlock12" identifier="SEEN-SOLUTION" outcomeIdentifier="FEEDBACK"
            showHide="show">
            <p>Since you have viewed the solution, your score for this question will be 0.</p>
        </feedbackBlock>
        <feedbackBlock id="feedbackBlock13" identifier="SEEN-HINT" outcomeIdentifier="FEEDBACK"
            showHide="show">
            <p>Since you have viewed the hint, your score for this question will be halved.</p>
        </feedbackBlock>
        </templateBlock>
        <templateBlock templateIdentifier="tHide" identifier="SolHintButtons" showHide="hide">
            <feedbackBlock id="feedbackBlock14" identifier="askhint" outcomeIdentifier="ASKHINT"
            showHide="show">
            <p>
                <endAttemptInteraction id="endAttemptInteraction1" responseIdentifier="HINTREQUEST"
                    title="Show Hint"/>
            </p>
        </feedbackBlock>
        <feedbackBlock id="feedbackBlock15" identifier="asksolution" outcomeIdentifier="ASKSOLUTION"
            showHide="show">
            <p>
                <endAttemptInteraction id="endAttemptInteraction2" responseIdentifier="SOLREQUEST"
                    title="Show Solution"/>
            </p>
        </feedbackBlock>
        </templateBlock>
    </itemBody>
    <responseProcessing>
        <setOutcomeValue identifier="FEEDBACK">
            <multiple>
                <variable identifier="EMPTY"/>
            </multiple>
        </setOutcomeValue>
        <responseCondition>
            <responseIf>
                <variable identifier="HINTREQUEST"/>
                <setOutcomeValue identifier="FEEDBACK">
                    <multiple>
                        <baseValue baseType="identifier">HINT</baseValue>
                    </multiple>
                </setOutcomeValue>
                <setOutcomeValue identifier="seenHint">
                    <baseValue baseType="boolean">true</baseValue>
                </setOutcomeValue>
            </responseIf>
            <responseElseIf>
                <variable identifier="SOLREQUEST"/>
                <setOutcomeValue identifier="seenSolution">
                    <baseValue baseType="boolean">true</baseValue>
                </setOutcomeValue>
                <setOutcomeValue identifier="FEEDBACK">
                    <multiple>
                        <baseValue baseType="identifier">SOLUTION</baseValue>
                    </multiple>
                </setOutcomeValue>
                <setOutcomeValue identifier="completionStatus">
                    <baseValue baseType="identifier">completed</baseValue>
                </setOutcomeValue>
            </responseElseIf>
            <responseElse>
                <responseCondition>
                    <responseIf>
                        <isNull>
                            <variable identifier="RESPONSE"/>
                        </isNull>
                        <setOutcomeValue identifier="SCORE">
                            <baseValue baseType="float">0.0</baseValue>
                        </setOutcomeValue>
                    </responseIf>
                    <responseElse>
                        <setOutcomeValue identifier="oDummy">
                            <customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                                <baseValue baseType="string"><![CDATA[
                    ob1: is(is(equal(RESPONSE,mAns))=true);
                    ob2: is(is(equal(ev(RESPONSE,simp),mAns))=true);
                    ob3: is(is(equal(ev(RESPONSE,simp),ev(iK*mAns,simp)))=true);
                    ob4: is(is(equal(ev(RESPONSE,simp),mBadSign))=true);
                    ob5: is(is(equal(ev(RESPONSE,simp),mBadAngle))=true);
                    ]]>
                                </baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <responseCondition>
                            <responseIf>
                                <variable identifier="ob1"/>
                                <!-- <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                    ma:syntax="text/x-maxima">
                                    <baseValue baseType="string">is(is(equal(RESPONSE,mAns))=true);</baseValue>
                                </customOperator> -->
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">2.0</baseValue>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">Correct</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                            </responseIf>
                            <responseElseIf>
                                <variable identifier="ob2"/>
                                <!--<customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                    ma:syntax="text/x-maxima">
                                    <baseValue baseType="string">is(is(equal(ev(RESPONSE,simp),mAns))=true);</baseValue>
                                </customOperator>-->
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">NOTSIMP</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">1.0</baseValue>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElseIf>
                                <variable identifier="ob3"/>
                                <!-- <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                    ma:syntax="text/x-maxima">
                                    <baseValue baseType="string">is(is(equal(ev(RESPONSE,simp),ev(mAmp1,simp)))=true);</baseValue>
                                </customOperator> -->
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">Coeff</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">1.0</baseValue>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElseIf>
                                <variable identifier="ob4"/>
                                <!-- <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                    ma:syntax="text/x-maxima">
                                    <baseValue baseType="string">is(is(equal(ev(RESPONSE,simp),ev(mSwap,simp)))=true);</baseValue>
                                </customOperator> -->
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">Sign</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">1.0</baseValue>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElseIf>
                                <variable identifier="ob5"/>
                                <!-- <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                    ma:syntax="text/x-maxima">
                                    <baseValue baseType="string">is(is(equal(ev(RESPONSE,simp),mOther))=true);</baseValue>
                                </customOperator> -->
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">Angle</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0.0</baseValue>
                                </setOutcomeValue>
                            </responseElseIf>
                            <responseElse>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0.0</baseValue>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">Incorrect</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                            </responseElse>
                        </responseCondition>
                        <responseCondition>
                            <responseIf>
                                <variable identifier="seenSolution"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <variable identifier="FEEDBACK"/>
                                        <baseValue baseType="identifier">SEEN-SOLUTION</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">0.0</baseValue>
                                </setOutcomeValue>
                            </responseIf>
                            <responseElseIf>
                                <variable identifier="seenHint"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <variable identifier="FEEDBACK"/>
                                        <baseValue baseType="identifier">SEEN-HINT</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <divide>
                                        <variable identifier="SCORE"/>
                                        <baseValue baseType="float">2.0</baseValue>
                                    </divide>
                                </setOutcomeValue>
                            </responseElseIf>
                        </responseCondition>
                        <responseCondition>
                            <responseIf>
                                <gte>
                                    <variable identifier="numAttempts"/>
                                    <variable identifier="nTries"/>
                                </gte>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">NoMoreTries</baseValue>
                                        <baseValue baseType="identifier">SOLUTION</baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="completionStatus">
                                    <baseValue baseType="identifier">completed</baseValue>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="ASKHINT">
                                    <baseValue baseType="identifier">null</baseValue>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="ASKSOLUTION">
                                    <baseValue baseType="identifier">null</baseValue>
                                </setOutcomeValue>
                            </responseIf>
                        </responseCondition>
                    </responseElse>
                </responseCondition>
            </responseElse>
        </responseCondition>
    </responseProcessing>
</assessmentItem>
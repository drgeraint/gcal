<?xml version="1.0" encoding="UTF-8"?>
<assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p1"
                xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:ma="http://mathassess.qtitools.org/xsd/mathassess"
                xmlns:xlink="http://www.w3.org/1999/xlink"
                xmlns:m="http://www.w3.org/1998/Math/MathML"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                adaptive="true"
                identifier="integration-009-trig1b"
                timeDependent="false"
                title="Integrate asin(bx) or acos(bx)"
                toolName="Uniqurate"
                toolVersion="0.5.1"
                xsi:schemaLocation="http://www.imsglobal.org/xsd/imsqti_v2p1 imsqti_v2p1.xsd http://mathassess.qtitools.org/xsd/mathassess mathassess.xsd">
	  <responseDeclaration baseType="string" cardinality="single" identifier="pInput"/>
	  <responseDeclaration baseType="boolean" cardinality="single" identifier="HINTREQUEST"/>
	  <responseDeclaration baseType="boolean" cardinality="single" identifier="SOLREQUEST"/>
	  <responseDeclaration cardinality="record" identifier="RESPONSE"/>
	  <outcomeDeclaration baseType="identifier" cardinality="multiple" identifier="FEEDBACK"/>
	  <outcomeDeclaration baseType="identifier" cardinality="single" identifier="EMPTY"/>
	  <outcomeDeclaration baseType="float" cardinality="single" identifier="SCORE" normalMaximum="2.0"
                       normalMinimum="0.0">
		    <defaultValue>
			      <value>0.0</value>
		    </defaultValue>
	  </outcomeDeclaration>
	  <outcomeDeclaration baseType="boolean" cardinality="single" identifier="seenSolution">
		    <defaultValue>
			      <value>false</value>
		    </defaultValue>
	  </outcomeDeclaration>
	  <outcomeDeclaration baseType="boolean" cardinality="single" identifier="seenHint">
		    <defaultValue>
			      <value>false</value>
		    </defaultValue>
	  </outcomeDeclaration>
	  <outcomeDeclaration baseType="identifier" cardinality="single" identifier="ASKHINT">
		    <defaultValue>
			      <value>askhint</value>
		    </defaultValue>
	  </outcomeDeclaration>
	  <outcomeDeclaration baseType="identifier" cardinality="single" identifier="ASKSOLUTION">
		    <defaultValue>
			      <value>asksolution</value>
		    </defaultValue>
	  </outcomeDeclaration>
	  <outcomeDeclaration cardinality="record" identifier="oInput"/>
	  <outcomeDeclaration baseType="string" cardinality="single" identifier="opInput"/>
	  <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob1"/>
	  <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob2"/>
	  <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob3"/>
	  <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob4"/>
	  <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob5"/>
	  <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob6"/>
	  <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob7"/>
	  <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob8"/>
	  <outcomeDeclaration baseType="boolean" cardinality="single" identifier="ob9"/>
	  <templateDeclaration baseType="boolean" cardinality="single" identifier="tDummy"
                        mathVariable="false"
                        paramVariable="false"/>
	  <templateDeclaration cardinality="record" identifier="mX" mathVariable="true" paramVariable="false"/>
	  <templateDeclaration cardinality="record" identifier="mQues" mathVariable="true"
                        paramVariable="false"/>
	  <templateDeclaration cardinality="record" identifier="mDeriv" mathVariable="true"
                        paramVariable="false"/>
	  <templateDeclaration cardinality="record" identifier="mInt" mathVariable="true"
                        paramVariable="false"/>
	<templateDeclaration baseType="integer" cardinality="single" identifier="iType" mathVariable="true"
		paramVariable="false"/>
	<templateDeclaration baseType="integer" cardinality="single" identifier="iA" mathVariable="true"
		paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iB" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iC" mathVariable="true"
        paramVariable="false"/>
    <templateDeclaration baseType="integer" cardinality="single" identifier="iAB" mathVariable="true"
                        paramVariable="false"/>
	  <templateDeclaration baseType="integer" cardinality="single" identifier="iB1" mathVariable="true"
                        paramVariable="false"/>
	<templateDeclaration identifier="mFunc" cardinality="record" paramVariable="false"
		mathVariable="true"/>
	<templateDeclaration identifier="mIFunc" cardinality="record" paramVariable="false"
		mathVariable="true"/>
    <templateDeclaration identifier="mArg" cardinality="record" paramVariable="false"
        mathVariable="true"/>
    <templateDeclaration identifier="mIfArg" cardinality="record" paramVariable="false"
        mathVariable="true"/>
    <templateProcessing>
		<!-- now do the randomisation and mathematical calculations, using maxima -->
		<setTemplateValue identifier="iType">
			<randomInteger max="2" min="1"/>
		</setTemplateValue>
		<setTemplateValue identifier="iA">
			<product>
				<randomInteger max="7" min="2"/>
				<randomInteger max="1" min="-1" step="2"/>
			</product>
		</setTemplateValue>
		<setTemplateValue identifier="iB">
			<randomInteger max="10" min="1"/>
		</setTemplateValue>
		<setTemplateValue identifier="iC">
		    <baseValue baseType="integer">0</baseValue>
		</setTemplateValue>
		<setTemplateValue identifier="tDummy">
			      <customOperator class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
			      	<baseValue baseType="string"><![CDATA[
 simp:true;
 iAB: ev(iA*iB,simp);
 array(aarr,18);
 fillarray(aarr,[a,b,c,d,h,k,m,n,p,q,r,s,t,u,v,w,x,y,z]);
 mX:aarr[random(18)];
 mArg: ev(iB*mX+iC,simp);
 if (iType=1) then mFunc: ev(sin(mX),simp) else mFunc: ev(cos(mX),simp);
 if (iType=1) then mQues: ev(iA*sin(mArg),simp) else mQues: ev(iA*cos(mArg),simp);
 mIFunc: integrate(mFunc,mX);
 mIfArg: ev(subst(mArg,mX,mIFunc),simp);
 mDeriv: diff(mQues,mX);
 mInt: integrate(mQues,mX);

]]></baseValue>
			      </customOperator>
		    </setTemplateValue>
	  </templateProcessing>
	  <itemBody>
		    <p>Integrate:</p>
	  	<div class="">
	  		<m:math id="mathML0" display="block">
	  			<m:semantics>
	  				<m:mi>mQues</m:mi>
	  				<m:annotation encoding="LaTeX">\[\qv{mQues}\]</m:annotation>
	  			</m:semantics>
	  		</m:math>
	  	</div>
	  	<div class="">
			      <customInteraction class="org.qtitools.mathassess.MathEntryInteraction" id="customInteraction0"
                            ma:expectedLength="15"
                            ma:printIdentifier="pInput"
                            ma:syntax="text/x-maxima"
                            responseIdentifier="RESPONSE"/>
      </div>
		    <div class="">
			      <feedbackInline id="feedbackInline0" identifier="Differentiated" outcomeIdentifier="FEEDBACK"
                         showHide="show"> You differentiated! </feedbackInline>
		    </div>
		    <div class="">
			      <feedbackInline id="feedbackInline1" identifier="Original" outcomeIdentifier="FEEDBACK"
                         showHide="show"> Your input is equivalent to the expression in the question. </feedbackInline>
      </div>
		    <div class="">
			      <feedbackInline id="feedbackInline2" identifier="Incorrect" outcomeIdentifier="FEEDBACK"
                         showHide="show"> Incorrect - please see the solution. </feedbackInline>
      </div>
		    <div class="">
			      <feedbackInline id="feedbackInline3" identifier="Correct" outcomeIdentifier="FEEDBACK"
                         showHide="show"> Good, you have successfully integrated the expression. </feedbackInline>
      </div>
		    <div class="">
			      <feedbackInline id="feedbackInline4" identifier="DivNoInc" outcomeIdentifier="FEEDBACK"
			          showHide="show"> You divided by the derivative of&#160;<printedVariable identifier="mArg"/>, but you had not integrated&#160;<printedVariable identifier="mFunc"/> - see the solution. </feedbackInline>
      </div>
		    <div class="">
			      <feedbackInline id="feedbackInline5" identifier="IncNoDiv" outcomeIdentifier="FEEDBACK"
			          showHide="show"> You integrated&#160;<printedVariable identifier="mFunc"/> but you didn't divide by the derivative of&#160;<printedVariable identifier="mArg"/> - see the solution. </feedbackInline>
      </div>
		    <div class="">
			      <feedbackInline id="feedbackInline6" identifier="DivThenInc" outcomeIdentifier="FEEDBACK"
			          showHide="show"> You should divide by the derivative of&#160;<printedVariable identifier="mArg"/> - see the solution. </feedbackInline>
      </div>
		    <div class="">
			      <feedbackInline id="feedbackInline7" identifier="IncMult" outcomeIdentifier="FEEDBACK"
			          showHide="show"> You integrated&#160;<printedVariable identifier="mFunc"/>, but you multiplied by the derivative of&#160;<printedVariable identifier="mArg"/> instead of dividing - see the solution. </feedbackInline>
      </div>
		    <div class="">
			      <feedbackInline id="feedbackInline9" identifier="Sign" outcomeIdentifier="FEEDBACK"
                         showHide="show"> You have the wrong sign - see the solution. </feedbackInline>
      </div>
		    <div class="">
			      <feedbackBlock id="feedbackBlock11" identifier="THREETRIES" outcomeIdentifier="FEEDBACK"
                        showHide="show">
				        <p> You have had three attempts at answering this question, so here is the solution: </p>
			      </feedbackBlock>
			      <feedbackBlock identifier="SOLUTION" outcomeIdentifier="FEEDBACK" showHide="show">
			          <p>To integrate this expression, we integrate&#160;<printedVariable identifier="mFunc"/><br />
            </p> 
               <m:math display="block">
                   
                  <m:semantics>
                     <m:mrow>
                        <m:mo>&#x222b;</m:mo>
                        <m:mi>mFunc</m:mi>
                         <m:mtext> d</m:mtext>
                         <m:mi>mX</m:mi>
                        <m:mo>=</m:mo>
                     	<m:mi>mIFunc</m:mi>
                     </m:mrow>
                     <m:annotation encoding="SnuggleTeX">\[
                         \int(\qv{mBoverC}+1)\mbox{ d}\qv{mX}=\qv{mBoverCplus1}\]</m:annotation>
                  </m:semantics>
               </m:math> 
            
			          <p>Then we divide the expression by the derivative of&#160;<printedVariable identifier="mArg"/><br />
            </p>
				        <m:math display="block">
               <m:semantics>
                   <m:mrow>
                       <m:mfrac>
                           <m:mi>iA</m:mi>
                           <m:mi>iB</m:mi>
                       </m:mfrac>
                       <m:mo>&#xd7;</m:mo>
                       <m:mi>mIfArg</m:mi>
                   </m:mrow>
               	<m:annotation encoding="SnuggleTeX">\[\frac{\qv{iA}{\qv{iB}}\times\\qv{mIfArg}\]</m:annotation>
               </m:semantics>
            </m:math> 
			          <p>So we have
			              <m:math display="block">
			                  <m:semantics>
			                      <m:mrow>
			                          <m:mo>&#x222b;</m:mo>
			                          <m:mi>mQues</m:mi>
			                          <m:mtext> d</m:mtext>
			                          <m:mi>mX</m:mi>
			                          <m:mo>=</m:mo>
			                          <m:mi>mInt</m:mi>
			                      </m:mrow>
			                      <m:annotation encoding="SnuggleTeX">\[
			                          \int(\qv{mQues})\mbox{ d}\qv{mX}=\qv{mInt}\]</m:annotation>
			                  </m:semantics>
			              </m:math> 
			              </p>
			      </feedbackBlock>
      </div>
		    <div class="">
			      <feedbackBlock identifier="HINT" outcomeIdentifier="FEEDBACK" showHide="show">
			          <p>Integrate the function&#160;<printedVariable identifier="mFunc"/> and divide by the derivative of &#160;<printedVariable identifier="mArg"/>.</p>
			      </feedbackBlock>
      </div>
		    <feedbackBlock identifier="SEEN-SOLUTION" outcomeIdentifier="FEEDBACK" showHide="show">
			      <p> Since you have viewed the solution, your score for this question will be 0. </p>
		    </feedbackBlock>
		    <feedbackBlock identifier="SEEN-HINT" outcomeIdentifier="FEEDBACK" showHide="show">
			      <p> Since you have viewed the hint, your score for this question will be halved. </p>
		    </feedbackBlock>
		    <feedbackBlock identifier="askhint" outcomeIdentifier="ASKHINT" showHide="show">
			      <p>
				        <endAttemptInteraction id="endAttemptInteraction1" responseIdentifier="HINTREQUEST" title="Show Hint"/>
			      </p>
		    </feedbackBlock>
		    <feedbackBlock identifier="asksolution" outcomeIdentifier="ASKSOLUTION" showHide="show">
			      <p>
				        <endAttemptInteraction id="endAttemptInteraction2" responseIdentifier="SOLREQUEST"
                                   title="Show Solution"/>
			      </p>
		    </feedbackBlock>
	  </itemBody>
	  <responseProcessing>
		<!-- CAS judging, includes feedback on specific errors -->
		<setOutcomeValue identifier="FEEDBACK">
			      <multiple>
				        <variable identifier="EMPTY"/>
			      </multiple>
		    </setOutcomeValue>
		    <responseCondition>
			      <responseIf>
				        <variable identifier="HINTREQUEST"/>
				        <setOutcomeValue identifier="FEEDBACK">
					          <multiple>
						            <baseValue baseType="identifier">HINT</baseValue>
					          </multiple>
				        </setOutcomeValue>
				        <setOutcomeValue identifier="seenHint">
					          <baseValue baseType="boolean">true</baseValue>
				        </setOutcomeValue>
			      </responseIf>
			      <responseElseIf>
				        <variable identifier="SOLREQUEST"/>
				        <setOutcomeValue identifier="FEEDBACK">
					          <multiple>
						            <baseValue baseType="identifier">SOLUTION</baseValue>
					          </multiple>
				        </setOutcomeValue>
				        <setOutcomeValue identifier="seenSolution">
					          <baseValue baseType="boolean">true</baseValue>
				        </setOutcomeValue>
				        <setOutcomeValue identifier="completionStatus">
					          <baseValue baseType="identifier">completed</baseValue>
				        </setOutcomeValue>
				        <setOutcomeValue identifier="ASKHINT">
					          <baseValue baseType="identifier">null</baseValue>
				        </setOutcomeValue>
				        <setOutcomeValue identifier="ASKSOLUTION">
					          <baseValue baseType="identifier">null</baseValue>
				        </setOutcomeValue>
			      </responseElseIf>
			      <responseElse>
				        <responseCondition>
					          <responseIf>
						            <isNull>
							              <variable identifier="RESPONSE"/>
						            </isNull>
						            <setOutcomeValue identifier="SCORE">
							              <baseValue baseType="float">0</baseValue>
						            </setOutcomeValue>
					          </responseIf>
					          <responseElse>
						            <setOutcomeValue identifier="oInput">
							              <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="mathsContent"
                                     ma:syntax="text/x-maxima">
								                <baseValue baseType="string">ev(RESPONSE,simp);</baseValue>
							              </customOperator>
						            </setOutcomeValue>
						            <setOutcomeValue identifier="ob1">
							              <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                     ma:syntax="text/x-maxima">
								                <baseValue baseType="string">is(is(equal(RESPONSE,mInt))=true);</baseValue>
							              </customOperator>
						            </setOutcomeValue>
						            <setOutcomeValue identifier="ob2">
							              <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                     ma:syntax="text/x-maxima">
								                <baseValue baseType="string">is(is(equal(ev(integrate(RESPONSE,mX),simp),mQues))=true);</baseValue>
							              </customOperator>
						            </setOutcomeValue>
						            <setOutcomeValue identifier="ob3">
							              <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                     ma:syntax="text/x-maxima">
								                <baseValue baseType="string">is(is(equal(RESPONSE,mQues))=true); </baseValue>
							              </customOperator>
						            </setOutcomeValue>
						            <setOutcomeValue identifier="ob4">
							              <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                     ma:syntax="text/x-maxima">
							              	<baseValue baseType="string"> is(is(equal(RESPONSE,ev(mQues/iB,simp)))=true);</baseValue>
							              </customOperator>
						            </setOutcomeValue>
						            <setOutcomeValue identifier="ob5">
							              <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                     ma:syntax="text/x-maxima">
								                <baseValue baseType="string"> is(is(equal(ev(RESPONSE/iB,simp),mInt))=true);</baseValue>
							              </customOperator>
						            </setOutcomeValue>
						            <setOutcomeValue identifier="ob6">
							              <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                     ma:syntax="text/x-maxima">
							              	<baseValue baseType="string"> is(is(equal(ev(RESPONSE*(iB+1),simp),ev(mInt*iB,simp)))=true);</baseValue>
							              </customOperator>
						            </setOutcomeValue>
						            <setOutcomeValue identifier="ob7">
							              <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                     ma:syntax="text/x-maxima">
								                <baseValue baseType="string"> is(is(equal(RESPONSE,ev(mInt*iB^2,simp)))=true);</baseValue>
							              </customOperator>
						            </setOutcomeValue>
						            <setOutcomeValue identifier="ob9">
							              <customOperator class="org.qtitools.mathassess.CasProcess" ma:returnType="boolean"
                                     ma:syntax="text/x-maxima">
								                <baseValue baseType="string"> is(is(equal(ev(RESPONSE+mInt,simp),0))=true);</baseValue>
							              </customOperator>
						            </setOutcomeValue>
						            <setOutcomeValue identifier="opInput">
							              <fieldValue fieldIdentifier="PMathML">
								                <variable identifier="oInput"/>
							              </fieldValue>
						            </setOutcomeValue>
						            <responseCondition>
							              <responseIf>
								                <variable identifier="ob1"/>
								                <setOutcomeValue identifier="FEEDBACK">
									                  <multiple>
										                    <baseValue baseType="identifier">Correct</baseValue>
									                  </multiple>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="SCORE">
									                  <baseValue baseType="float">2</baseValue>
								                </setOutcomeValue>
							              </responseIf>
							              <responseElseIf>
								                <variable identifier="ob2"/>
								                <setOutcomeValue identifier="FEEDBACK">
									                  <multiple>
										                    <baseValue baseType="identifier">Differentiated</baseValue>
									                  </multiple>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="SCORE">
									                  <baseValue baseType="float">0</baseValue>
								                </setOutcomeValue>
							              </responseElseIf>
							              <responseElseIf>
								                <variable identifier="ob3"/>
								                <setOutcomeValue identifier="FEEDBACK">
									                  <multiple>
										                    <baseValue baseType="identifier">Original</baseValue>
									                  </multiple>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="SCORE">
									                  <baseValue baseType="float">0</baseValue>
								                </setOutcomeValue>
							              </responseElseIf>
							              <responseElseIf>
								                <variable identifier="ob4"/>
								                <setOutcomeValue identifier="FEEDBACK">
									                  <multiple>
									                  	<baseValue baseType="identifier">DivNoInc</baseValue>
									                  </multiple>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="SCORE">
									                  <baseValue baseType="float">0</baseValue>
								                </setOutcomeValue>
							              </responseElseIf>
							              <responseElseIf>
								                <variable identifier="ob5"/>
								                <setOutcomeValue identifier="FEEDBACK">
									                  <multiple>
									                  	<baseValue baseType="identifier">IncNoDiv</baseValue>
									                  </multiple>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="SCORE">
									                  <baseValue baseType="float">0</baseValue>
								                </setOutcomeValue>
							              </responseElseIf>
							              <responseElseIf>
								                <variable identifier="ob6"/>
								                <setOutcomeValue identifier="FEEDBACK">
									                  <multiple>
									                  	<baseValue baseType="identifier">DivThenInc</baseValue>
									                  </multiple>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="SCORE">
									                  <baseValue baseType="float">0</baseValue>
								                </setOutcomeValue>
							              </responseElseIf>
							              <responseElseIf>
								                <variable identifier="ob7"/>
								                <setOutcomeValue identifier="FEEDBACK">
									                  <multiple>
									                  	<baseValue baseType="identifier">IncMult</baseValue>
									                  </multiple>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="SCORE">
									                  <baseValue baseType="float">0</baseValue>
								                </setOutcomeValue>
							              </responseElseIf>
							              <responseElseIf>
								                <variable identifier="ob9"/>
								                <setOutcomeValue identifier="FEEDBACK">
									                  <multiple>
										                    <baseValue baseType="identifier">Sign</baseValue>
									                  </multiple>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="SCORE">
									                  <baseValue baseType="float">0</baseValue>
								                </setOutcomeValue>
							              </responseElseIf>
							              <responseElse>
								                <setOutcomeValue identifier="FEEDBACK">
									                  <multiple>
										                    <baseValue baseType="identifier">Incorrect</baseValue>
									                  </multiple>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="SCORE">
									                  <baseValue baseType="float">0</baseValue>
								                </setOutcomeValue>
							              </responseElse>
						            </responseCondition>
						            <responseCondition>
							              <responseIf>
								                <gt>
									                  <variable identifier="numAttempts"/>
									                  <baseValue baseType="integer">                                            3                                        </baseValue>
								                </gt>
								                <setOutcomeValue identifier="FEEDBACK">
									                  <multiple>
										                    <baseValue baseType="identifier">                                                THREETRIES                                            </baseValue>
										                    <baseValue baseType="identifier">                                                SOLUTION                                            </baseValue>
									                  </multiple>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="completionStatus">
									                  <baseValue baseType="identifier">                                            completed                                        </baseValue>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="ASKHINT">
									                  <baseValue baseType="identifier">                                            null                                        </baseValue>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="ASKSOLUTION">
									                  <baseValue baseType="identifier">                                            null                                        </baseValue>
								                </setOutcomeValue>
							              </responseIf>
						            </responseCondition>
						            <responseCondition>
							              <responseIf>
								                <variable identifier="seenSolution"/>
								                <setOutcomeValue identifier="FEEDBACK">
									                  <multiple>
										                    <variable identifier="FEEDBACK"/>
										                    <baseValue baseType="identifier">SEEN-SOLUTION</baseValue>
									                  </multiple>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="SCORE">
									                  <baseValue baseType="float">0.0</baseValue>
								                </setOutcomeValue>
							              </responseIf>
							              <responseElseIf>
								                <variable identifier="seenHint"/>
								                <setOutcomeValue identifier="FEEDBACK">
									                  <multiple>
										                    <variable identifier="FEEDBACK"/>
										                    <baseValue baseType="identifier">SEEN-HINT</baseValue>
									                  </multiple>
								                </setOutcomeValue>
								                <setOutcomeValue identifier="SCORE">
									                  <divide>
										                    <variable identifier="SCORE"/>
										                    <baseValue baseType="float">2.0</baseValue>
									                  </divide>
								                </setOutcomeValue>
							              </responseElseIf>
						            </responseCondition>
					          </responseElse>
				        </responseCondition>
			      </responseElse>
		    </responseCondition>
	  </responseProcessing>
</assessmentItem>
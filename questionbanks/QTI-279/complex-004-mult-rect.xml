<?xml version="1.0" encoding="UTF-8"?>
<assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p1"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:m="http://www.w3.org/1998/Math/MathML"
    xmlns:ma="http://mathassess.qtitools.org/xsd/mathassess"
    xsi:schemaLocation="http://www.imsglobal.org/xsd/imsqti_v2p1 imsqti_v2p1.xsd http://mathassess.qtitools.org/xsd/mathassess mathassess.xsd"
    toolName="Mathqurate" toolVersion="1.0" xml:lang="en" adaptive="true" timeDependent="false"
    identifier="complex-004-mult-rect" title="Multiply complex numbers in Cartesian form(j)">
    <responseDeclaration identifier="ans1" cardinality="single" baseType="integer"/>
    <responseDeclaration identifier="ans2" cardinality="single" baseType="integer"/>
    <responseDeclaration identifier="sInput1" cardinality="single" baseType="string"/>
    <responseDeclaration identifier="sInput2" cardinality="single" baseType="string"/>
    <responseDeclaration identifier="HINTREQUEST" cardinality="single" baseType="boolean"/>
    <responseDeclaration identifier="SOLREQUEST" cardinality="single" baseType="boolean"/>
    <outcomeDeclaration identifier="SCORE" baseType="float" cardinality="single" normalMaximum="2.0">
        <defaultValue>
            <value>0.0</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration identifier="seenSolution" baseType="boolean" cardinality="single">
        <defaultValue>
            <value>false</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration identifier="seenHint" baseType="boolean" cardinality="single">
        <defaultValue>
            <value>false</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration identifier="ASKHINT" baseType="identifier" cardinality="single">
        <defaultValue>
            <value>askhint</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration identifier="ASKSOLUTION" baseType="identifier" cardinality="single">
        <defaultValue>
            <value>asksolution</value>
        </defaultValue>
    </outcomeDeclaration>
    <outcomeDeclaration identifier="FEEDBACK" baseType="identifier" cardinality="multiple"/>
    <outcomeDeclaration identifier="EMPTY" baseType="identifier" cardinality="single"/>
    <outcomeDeclaration identifier="oDummy" baseType="boolean" cardinality="single"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="isOrig"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="isOK"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="rOK"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="iOK"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="rSign"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="iSign"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="isSimp"/>
    <outcomeDeclaration baseType="boolean" cardinality="single" identifier="notSimp"/>
    <outcomeDeclaration cardinality="record" identifier="sans1"/>
    <outcomeDeclaration cardinality="record" identifier="sansr"/>
    <outcomeDeclaration cardinality="record" identifier="sansi"/>
    <outcomeDeclaration cardinality="record" identifier="sansi2"/>
    <templateDeclaration identifier="a" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="b" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="c" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="d" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="absa" cardinality="single" baseType="integer"
        mathVariable="true"/>
    <templateDeclaration identifier="absb" cardinality="single" baseType="integer"
        mathVariable="true"/>
    <templateDeclaration identifier="absc" cardinality="single" baseType="integer"
        mathVariable="true"/>
    <templateDeclaration identifier="absd" cardinality="single" baseType="integer"
        mathVariable="true"/>
    <templateDeclaration identifier="ac" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="ad" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="bc" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="bd" cardinality="single" baseType="integer" mathVariable="true"/>
    <templateDeclaration identifier="absac" cardinality="single" baseType="integer"
        mathVariable="true"/>
    <templateDeclaration identifier="absad" cardinality="single" baseType="integer"
        mathVariable="true"/>
    <templateDeclaration identifier="absbc" cardinality="single" baseType="integer"
        mathVariable="true"/>
    <templateDeclaration identifier="absbd" cardinality="single" baseType="integer"
        mathVariable="true"/>
    <templateDeclaration identifier="signa" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="signb" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="signc" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="signd" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="signac" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="signad" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="signbc" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="signbd" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="msignbd" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="ansr" cardinality="single" baseType="integer"
        mathVariable="true"/>
    <templateDeclaration identifier="ansi" cardinality="single" baseType="integer"
        mathVariable="true"/>
    <templateDeclaration identifier="absansi" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="signansi" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="c1" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="c2" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="ans" cardinality="record" mathVariable="true"/>
    <templateDeclaration identifier="tDummy" baseType="boolean" cardinality="single"
        mathVariable="false"/>
    <templateDeclaration identifier="tExpr1" cardinality="single" baseType="identifier"/>
    <templateDeclaration identifier="tExpr2" cardinality="single" baseType="identifier"/>
    <templateDeclaration identifier="tExpr3" cardinality="single" baseType="identifier"/>
    <templateProcessing>
        <setTemplateValue identifier="tDummy">
            <customOperator xmlns:ma="http://mathassess.qtitools.org/xsd/mathassess"
                class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                <baseValue baseType="string"><![CDATA[
                    a : ev(random(19)-9,simp);
                    if a=0 then b : ev((random(9)+1)*(random(2)*2-1),simp) else b : ev(random(19)-9,simp);
                    c : ev(random(19)-9,simp);
                    if (b=0 or c=0) then d : ev((random(9)+1)*(random(2)*2-1),simp) else d : ev(random(19)-9,simp);
                    absa: ev(abs(a),simp);
                    absb: ev(abs(b),simp);
                    absc: ev(abs(c),simp);
                    absd: ev(abs(d),simp);
                    if a>=0 then signa:maOperator("+") else signa:maOperator("-");
                    if b>=0 then signb:maOperator("+") else signb:maOperator("-");
                    if c>=0 then signc:maOperator("+") else signc:maOperator("-");
                    if d>=0 then signd:maOperator("+") else signd:maOperator("-");
                    ac : ev(a*c,simp);
                    ad : ev(a*d,simp);
                    bc : ev(b*c,simp);
                    bd : ev(b*d,simp);
                    absac: ev(abs(ac),simp);
                    absad: ev(abs(ad),simp);
                    absbc: ev(abs(bc),simp);
                    absbd: ev(abs(bd),simp);
                    if ac>=0 then signac:maOperator("+") else signac:maOperator("-");
                    if ad>=0 then signad:maOperator("+") else signad:maOperator("-");
                    if bc>=0 then signbc:maOperator("+") else signbc:maOperator("-");
                    if bd>=0 then signbd:maOperator("+") else signbd:maOperator("-");
                    if bd>=0 then msignbd:maOperator("-") else msignbd:maOperator("+");
                    ansr : ev(ac-bd,simp);
                    ansi : ev(ad+bc,simp);
                    absansi: ev(abs(ansi),simp);
                    if ansi>=0 then signansi:maOperator("+") else signansi:maOperator("-");
                    c1 : ev(a+b*j,simp);
                    c2 : ev(c+d*j,simp);
                    ans : ev(ansr+ansi*j,simp); 
                    ]]>
                </baseValue>
            </customOperator>
        </setTemplateValue>
        <templateCondition>
            <templateIf>
                <or>
                    <equal toleranceMode="exact">
                        <variable identifier="a"/>
                        <baseValue baseType="integer">0</baseValue>
                    </equal>
                    <equal toleranceMode="exact">
                        <variable identifier="b"/>
                        <baseValue baseType="integer">0</baseValue>
                    </equal>
                </or>
                <setTemplateValue identifier="tExpr1">
                    <baseValue baseType="identifier">PV1</baseValue>
                </setTemplateValue>
            </templateIf>
            <templateElseIf>
                <or>
                    <equal toleranceMode="exact">
                        <variable identifier="b"/>
                        <baseValue baseType="integer">1</baseValue>
                    </equal>
                    <equal toleranceMode="exact">
                        <variable identifier="b"/>
                        <baseValue baseType="integer">-1</baseValue>
                    </equal>
                </or>
                <setTemplateValue identifier="tExpr1">
                    <baseValue baseType="identifier">MML1a</baseValue>
                </setTemplateValue>
            </templateElseIf>
            <templateElse>
                <setTemplateValue identifier="tExpr1">
                    <baseValue baseType="identifier">MML1b</baseValue>
                </setTemplateValue>
            </templateElse>
        </templateCondition>
        <templateCondition>
            <templateIf>
                <or>
                    <equal toleranceMode="exact">
                        <variable identifier="c"/>
                        <baseValue baseType="integer">0</baseValue>
                    </equal>
                    <equal toleranceMode="exact">
                        <variable identifier="d"/>
                        <baseValue baseType="integer">0</baseValue>
                    </equal>
                </or>
                <setTemplateValue identifier="tExpr2">
                    <baseValue baseType="identifier">PV2</baseValue>
                </setTemplateValue>
            </templateIf>
            <templateElseIf>
                <or>
                    <equal toleranceMode="exact">
                        <variable identifier="d"/>
                        <baseValue baseType="integer">1</baseValue>
                    </equal>
                    <equal toleranceMode="exact">
                        <variable identifier="d"/>
                        <baseValue baseType="integer">-1</baseValue>
                    </equal>
                </or>
                <setTemplateValue identifier="tExpr2">
                    <baseValue baseType="identifier">MML2a</baseValue>
                </setTemplateValue>
            </templateElseIf>
            <templateElse>
                <setTemplateValue identifier="tExpr2">
                    <baseValue baseType="identifier">MML2b</baseValue>
                </setTemplateValue>
            </templateElse>
        </templateCondition>
        <templateCondition>
            <templateIf>
                <or>
                    <equal toleranceMode="exact">
                        <variable identifier="ansr"/>
                        <baseValue baseType="integer">0</baseValue>
                    </equal>
                    <equal toleranceMode="exact">
                        <variable identifier="ansi"/>
                        <baseValue baseType="integer">0</baseValue>
                    </equal>
                </or>
                <setTemplateValue identifier="tExpr3">
                    <baseValue baseType="identifier">MML3a</baseValue>
                </setTemplateValue>
            </templateIf>
            <templateElseIf>
                <or>
                    <equal toleranceMode="exact">
                        <variable identifier="ansi"/>
                        <baseValue baseType="integer">1</baseValue>
                    </equal>
                    <equal toleranceMode="exact">
                        <variable identifier="ansi"/>
                        <baseValue baseType="integer">-1</baseValue>
                    </equal>
                </or>
                <setTemplateValue identifier="tExpr3">
                    <baseValue baseType="identifier">MML3b</baseValue>
                </setTemplateValue>
            </templateElseIf>
            <templateElse>
                <setTemplateValue identifier="tExpr3">
                    <baseValue baseType="identifier">MML3c</baseValue>
                </setTemplateValue>
            </templateElse>
        </templateCondition>
    </templateProcessing>
    <itemBody>
        <div>
            <p>
                <m:math id="mathML001a">
                <m:semantics>
                    <m:mrow>
                        <m:mi>A</m:mi>
                    </m:mrow>
                    <m:annotation encoding="SnuggleTeX">\[A\]</m:annotation>
                </m:semantics>
            </m:math>
                 is the complex number 
                <templateInline templateIdentifier="tExpr1" showHide="show"
                    identifier="PV1">
                    <printedVariable identifier="c1"/>
                </templateInline>
                <templateInline templateIdentifier="tExpr1" showHide="show" identifier="MML1a">
                    <m:math id="mathML01a">
                        <m:semantics>
                            <m:mrow>
                                <m:mi>a</m:mi>
                                <m:mi>signb</m:mi>
                                <m:mi>j</m:mi>
                            </m:mrow>
                            <m:annotation encoding="SnuggleTeX">\[\qv{a}\qv{signb}j\]</m:annotation>
                        </m:semantics>
                    </m:math>
                </templateInline>
                <templateInline templateIdentifier="tExpr1" showHide="show" identifier="MML1b">
                    <m:math id="mathML01b">
                        <m:semantics>
                            <m:mrow>
                                <m:mi>a</m:mi>
                                <m:mi>signb</m:mi>
                                <m:mi>absb</m:mi>
                                <m:mi>j</m:mi>
                            </m:mrow>
                            <m:annotation encoding="SnuggleTeX"
                                >\[\qv{a}\qv{signb}\qv{absb}j\]</m:annotation>
                        </m:semantics>
                    </m:math>
                </templateInline>  and <m:math id="mathML001b">
                    <m:semantics>
                        <m:mrow>
                            <m:mi>B</m:mi>
                        </m:mrow>
                        <m:annotation encoding="SnuggleTeX">\[B\]</m:annotation>
                    </m:semantics>
                </m:math> is the complex number  <templateInline templateIdentifier="tExpr2" showHide="show"
                    identifier="PV2">
                    <printedVariable identifier="c2"/>
                </templateInline>
                <templateInline templateIdentifier="tExpr2" showHide="show" identifier="MML2a">
                    <m:math id="mathML02a">
                        <m:semantics>
                            <m:mrow>
                                <m:mi>c</m:mi>
                                <m:mi>signd</m:mi>
                                <m:mi>j</m:mi>
                            </m:mrow>
                            <m:annotation encoding="SnuggleTeX">\[\qv{c}\qv{signd}j\]</m:annotation>
                        </m:semantics>
                    </m:math>
                </templateInline>
                <templateInline templateIdentifier="tExpr2" showHide="show" identifier="MML2b">
                    <m:math id="mathML02b">
                        <m:semantics>
                            <m:mrow>
                                <m:mi>c</m:mi>
                                <m:mi>signd</m:mi>
                                <m:mi>absd</m:mi>
                                <m:mi>j</m:mi>
                            </m:mrow>
                            <m:annotation encoding="SnuggleTeX"
                                >\[\qv{c}\qv{signd}\qv{absd}j\]</m:annotation>
                        </m:semantics>
                    </m:math>
                </templateInline>. Find <m:math id="mathML1">
                    <m:semantics>
                        <m:mrow>
                            <m:mi>A</m:mi>
                            <m:mo>&#xd7;</m:mo>
                            <m:mi>B</m:mi>
                        </m:mrow>
                        <m:annotation encoding="SnuggleTeX">\[A \times B\]</m:annotation>
                    </m:semantics>
                </m:math>
            </p>
            <div>
                <table>
                    <tbody>
                        <tr>
                            <td class="">
                                <textEntryInteraction responseIdentifier="ans1" expectedLength="15"
                                    stringIdentifier="sInput1"/>
                            </td>
                            <td class="">
                                <m:math id="mathML002">
                                    <m:semantics>
                                        <m:mrow>
                                            <m:mo>+</m:mo>
                                        </m:mrow>
                                        <m:annotation encoding="SnuggleTeX">\[+\]</m:annotation>
                                    </m:semantics>
                                </m:math>
                            </td>
                            <td class="">
                                <textEntryInteraction responseIdentifier="ans2" expectedLength="15"
                                    stringIdentifier="sInput2"/><em>j</em>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <p>If either part is zero, enter 0; if either part is negative, include the - sign
                    in your input.</p>
                <p>&#160;</p>
                <p>
                    <feedbackInline identifier="CORRECT" outcomeIdentifier="FEEDBACK"
                        showHide="show"> Correct </feedbackInline>
                    <feedbackInline identifier="INCORRECT" outcomeIdentifier="FEEDBACK"
                        showHide="show"> Incorrect </feedbackInline>
                    <feedbackInline identifier="true1" outcomeIdentifier="FEEDBACK" showHide="show">
                        Your answer is not fully simplified.</feedbackInline>
                    <feedbackInline identifier="true1orig" outcomeIdentifier="FEEDBACK"
                        showHide="show"> You must simplify your answer.</feedbackInline>
                    <feedbackInline identifier="OK1" outcomeIdentifier="FEEDBACK" showHide="show">
                        The real part of your answer is correct.</feedbackInline>
                    <feedbackInline identifier="Sign1" outcomeIdentifier="FEEDBACK" showHide="show">
                        The sign of the real part of your answer is incorrect.</feedbackInline>
                    <feedbackInline identifier="No1" outcomeIdentifier="FEEDBACK" showHide="show"
                        > The real part of your answer is incorrect.</feedbackInline>
                    <feedbackInline identifier="OK2" outcomeIdentifier="FEEDBACK" showHide="show">
                        The imaginary part of your answer is correct.</feedbackInline>
                    <feedbackInline identifier="Sign2" outcomeIdentifier="FEEDBACK" showHide="show">
                        The sign of the imaginary part of your answer is incorrect.</feedbackInline>
                    <feedbackInline identifier="No2" outcomeIdentifier="FEEDBACK" showHide="show"
                        > The imaginary part of your answer is incorrect.</feedbackInline>
                </p>
            </div>
            <p>&#160;</p>
            <feedbackBlock identifier="THREETRIES" outcomeIdentifier="FEEDBACK" showHide="show">
                <p> You have had three attempts at answering this question, so here is the solution:
                </p>
            </feedbackBlock><feedbackBlock identifier="SOLUTION" outcomeIdentifier="FEEDBACK"
                showHide="show">
                <div>
                    <math xmlns="http://www.w3.org/1998/Math/MathML" display="block">
                        <semantics>
                            <m:mtable>
                                <m:mtr>
                                    <m:mtd columnalign="right">
                                        <m:mfenced close=")" open="(">
                                            <mrow>
                                                <m:mi>a</m:mi>
                                                <m:mi>signb</m:mi>
                                                <m:mi>absb</m:mi>
                                                <m:mi>j</m:mi>
                                            </mrow>
                                        </m:mfenced>
                                        <m:mfenced close=")" open="(">
                                            <mrow>
                                                <m:mi>c</m:mi>
                                                <m:mi>signd</m:mi>
                                                <m:mi>absd</m:mi>
                                                <m:mi>j</m:mi>
                                            </mrow>
                                        </m:mfenced>
                                    </m:mtd>
                                    <m:mtd columnalign="center">
                                        <m:mo>=</m:mo>
                                    </m:mtd>
                                    <m:mtd columnalign="left">
                                        <m:mi>ac</m:mi>
                                        <m:mo>+</m:mo>
                                        <m:mfenced close=")" open="(">
                                            <mrow>
                                                <m:mi>ad</m:mi>
                                            </mrow>
                                        </m:mfenced>
                                        <m:mi>j</m:mi>
                                        <m:mo>+</m:mo>
                                        <m:mfenced close=")" open="(">
                                            <mrow>
                                                <m:mi>bc</m:mi>
                                            </mrow>
                                        </m:mfenced>
                                        <m:mi>j</m:mi>
                                        <m:mo>+</m:mo>
                                        <m:mfenced close=")" open="(">
                                            <mrow>
                                                <m:mi>bd</m:mi>
                                            </mrow>
                                        </m:mfenced>
                                        <m:msup>
                                            <m:mi>j</m:mi>
                                            <mn>2</mn>
                                        </m:msup>
                                    </m:mtd>
                                </m:mtr>
                                <m:mtr>
                                    
                                    <m:mtd columnalign="right"/>
                                    
                                    <m:mtd columnalign="center">
                                        <m:mo>=</m:mo>
                                    </m:mtd>
                                    <m:mtd columnalign="left">
                                        <m:mi>ac</m:mi>
                                        <m:mo>+</m:mo>
                                        <m:mfenced close=")" open="(">
                                            <mrow>
                                                <m:mi>ad</m:mi>
                                                <m:mi>signbc</m:mi>
                                                <m:mi>absbc</m:mi>
                                            </mrow>
                                        </m:mfenced>
                                        <m:mi>j</m:mi>
                                        <m:mo>-</m:mo>
                                        <m:mfenced close=")" open="(">
                                            <mrow>
                                                <m:mi>bd</m:mi>
                                            </mrow>
                                        </m:mfenced>
                                    </m:mtd>
                                </m:mtr>
                                <m:mtr>
                                    <m:mtd columnalign="right"/>
                                    <m:mtd columnalign="center">
                                        <m:mo>=</m:mo>
                                    </m:mtd>
                                    <m:mtd columnalign="left">
                                        <m:mi>ac</m:mi>
                                        <m:mi>msignbd</m:mi>
                                        <m:mi>absbd</m:mi>
                                        <m:mo>+</m:mo>
                                        <m:mfenced close=")" open="(">
                                            <mrow>
                                                <m:mi>ad</m:mi>
                                                <m:mi>signbc</m:mi>
                                                <m:mi>absbc</m:mi>
                                            </mrow>
                                        </m:mfenced>
                                        <m:mi>j</m:mi>
                                    </m:mtd>
                                </m:mtr>
                                <m:mtr>
                                    <m:mtd columnalign="right"/>
                                    <m:mtd columnalign="center">
                                        <m:mo>=</m:mo>
                                    </m:mtd>
                                    <m:mtd columnalign="left">
                                        <m:mi>ansr</m:mi>
                                        <m:mi>signansi</m:mi>
                                        <m:mi>absansi</m:mi>
                                        <m:mi>j</m:mi>                                    </m:mtd>
                                </m:mtr>
                            </m:mtable>
                            <m:annotation encoding="SnuggleTeX">\begin{eqnarray*}(\qv{a}\qv{signb}\qv{absb}j)(\qv{c}\qv{signd}\qv{absd}j)&amp;=&amp; \qv{ac} +(\qv{ad})j +(\qv{bc})j +(\qv{bd})j^2\\&amp;=&amp;\qv{ac} +(\qv{ad}\qv{signbc}\qv{absbc})j -(\qv{bd})\\&amp;=&amp;\qv{ac}\qv{msignbd}\qv{absbd} +(\qv{ad}\qv{signbc}\qv{absbc})j \\&amp;=&amp;\qv{ansr}\qv{signansi}\qv{absansi}j \end{eqnarray*}</m:annotation>
                        </semantics>
                    </math></div>
            </feedbackBlock><feedbackBlock identifier="HINT" outcomeIdentifier="FEEDBACK"
                showHide="show">
                <p> Use the "FOIL" method to multiply the First, Outside, Inside and Last elements of the two numbers, and remember that  <m:math id="mathML014">
                    <m:semantics>
                        <m:mrow>
                            <m:msup>
                                <m:mi>j</m:mi>
                                <m:mn>2</m:mn>
                            </m:msup>
                            <m:mo>=</m:mo>
                            <m:mn>-1</m:mn>
                        </m:mrow>
                        <m:annotation encoding="SnuggleTeX"
                            >\[j^2=-1\]</m:annotation>
                    </m:semantics>
                </m:math>
                    . </p>
            </feedbackBlock><feedbackBlock identifier="SEEN-SOLUTION" outcomeIdentifier="FEEDBACK"
                showHide="show">
                <p> Since you have viewed the solution, your score for this question will be 0. </p>
            </feedbackBlock><feedbackBlock identifier="SEEN-HINT" outcomeIdentifier="FEEDBACK"
                showHide="show">
                <p> Viewing the Hint does not affect your score for this question. </p>
            </feedbackBlock><feedbackBlock identifier="askhint" outcomeIdentifier="ASKHINT"
                showHide="show">
                <p><endAttemptInteraction responseIdentifier="HINTREQUEST" title="Show Hint"/></p>
            </feedbackBlock><feedbackBlock identifier="asksolution" outcomeIdentifier="ASKSOLUTION"
                showHide="show">
                <p><endAttemptInteraction responseIdentifier="SOLREQUEST" title="Show Solution"
                    /></p>
            </feedbackBlock></div>
    </itemBody>
    <responseProcessing>
        <setOutcomeValue identifier="FEEDBACK">
            <multiple>
                <variable identifier="EMPTY"/>
            </multiple>
        </setOutcomeValue>
        <responseCondition>
            <responseIf>
                <variable identifier="HINTREQUEST"/>
                <setOutcomeValue identifier="FEEDBACK">
                    <multiple>
                        <baseValue baseType="identifier"> HINT
                            </baseValue>
                    </multiple>
                </setOutcomeValue>
                <setOutcomeValue identifier="seenHint">
                    <baseValue baseType="boolean"> true
                        </baseValue>
                </setOutcomeValue>
            </responseIf>
            <responseElseIf>
                <variable identifier="SOLREQUEST"/>
                <setOutcomeValue identifier="FEEDBACK">
                    <multiple>
                        <baseValue baseType="identifier"> SOLUTION
                            </baseValue>
                    </multiple>
                </setOutcomeValue>
                <setOutcomeValue identifier="seenSolution">
                    <baseValue baseType="boolean"> true
                        </baseValue>
                </setOutcomeValue>
                <setOutcomeValue identifier="completionStatus">
                    <baseValue baseType="identifier"> completed
                        </baseValue>
                </setOutcomeValue>
            </responseElseIf>
            <responseElse>
                <responseCondition>
                    <responseIf>
                        <or>
                            <isNull>
                                <variable identifier="ans1"/>
                            </isNull>
                            <isNull>
                                <variable identifier="ans2"/>
                            </isNull>
                        </or>
                        <setOutcomeValue identifier="SCORE">
                            <baseValue baseType="float"> 0.0
                                </baseValue>
                        </setOutcomeValue>
                    </responseIf>
                    <responseElse>
                        <setOutcomeValue identifier="oDummy">
                            <customOperator xmlns:ma="http://mathassess.qtitools.org/xsd/mathassess"
                                class="org.qtitools.mathassess.ScriptRule" ma:syntax="text/x-maxima">
                                <baseValue baseType="string"><![CDATA[

 rOK: if (is(equal(ansr,ans1))=true) then true else false;
 iOK: if (is(equal(ansi,ans2))=true) then true else false;
 isOK: if (rOK and iOK) then true else false;
 rSign: if (is(equal(ev(ansr+ans1,simp),0))=true) then true else false;
 iSign: if (is(equal(ev(ansi+ans2,simp),0))=true) then true else false;

]]></baseValue>
                            </customOperator>
                        </setOutcomeValue>
                        <responseCondition>
                            <responseIf>
                                <variable identifier="isOK"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier">                                                
                                            CORRECT                                            
                                        </baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float">                                            
                                        2.0                                        
                                    </baseValue>
                                </setOutcomeValue>
                            </responseIf>
                            <responseElse>
                                <responseCondition>
                                    <responseIf>
                                        <variable identifier="rOK"/>
                                        <setOutcomeValue identifier="FEEDBACK">
                                            <multiple>
                                                <baseValue baseType="identifier">                                                
                                                    OK1                                            
                                                </baseValue>
                                            </multiple>
                                        </setOutcomeValue>
                                        <responseCondition>
                                            <responseIf>
                                                <variable identifier="iOK"/>
                                                <setOutcomeValue identifier="FEEDBACK">
                                                    <multiple>
                                                        <variable identifier="FEEDBACK"/>
                                                        <baseValue baseType="identifier">                                                
                                                            OK2                                            
                                                        </baseValue>
                                                    </multiple>
                                                </setOutcomeValue>
                                                <setOutcomeValue identifier="SCORE">
                                                    <baseValue baseType="float">                                            
                                                        2.0                                        
                                                    </baseValue>
                                                </setOutcomeValue>
                                            </responseIf>
                                            <responseElseIf>
                                                <variable identifier="iSign"/>
                                                <setOutcomeValue identifier="FEEDBACK">
                                                    <multiple>
                                                        <variable identifier="FEEDBACK"/>
                                                        <baseValue baseType="identifier">                                                
                                                            Sign2                                            
                                                        </baseValue>
                                                    </multiple>
                                                </setOutcomeValue>
                                                <setOutcomeValue identifier="SCORE">
                                                    <baseValue baseType="float">                                            
                                                        1.5                                        
                                                    </baseValue>
                                                </setOutcomeValue>
                                            </responseElseIf>
                                            <responseElse>
                                                <setOutcomeValue identifier="FEEDBACK">
                                                    <multiple>
                                                        <variable identifier="FEEDBACK"/>
                                                        <baseValue baseType="identifier">                                                
                                                            No2                                            
                                                        </baseValue>
                                                    </multiple>
                                                </setOutcomeValue>
                                                <setOutcomeValue identifier="SCORE">
                                                    <baseValue baseType="float">                                            
                                                        1.0                                        
                                                    </baseValue>
                                                </setOutcomeValue>
                                            </responseElse>
                                        </responseCondition>
                                    </responseIf>
                                    <responseElseIf>
                                        <variable identifier="rSign"/>
                                        <setOutcomeValue identifier="FEEDBACK">
                                            <multiple>
                                                <baseValue baseType="identifier">                                                
                                                    Sign1                                            
                                                </baseValue>
                                            </multiple>
                                        </setOutcomeValue>
                                        <responseCondition>
                                            <responseIf>
                                                <variable identifier="iOK"/>
                                                <setOutcomeValue identifier="FEEDBACK">
                                                    <multiple>
                                                        <variable identifier="FEEDBACK"/>
                                                        <baseValue baseType="identifier">                                                
                                                            OK2                                            
                                                        </baseValue>
                                                    </multiple>
                                                </setOutcomeValue>
                                                <setOutcomeValue identifier="SCORE">
                                                    <baseValue baseType="float">                                            
                                                        1.5                                        
                                                    </baseValue>
                                                </setOutcomeValue>
                                            </responseIf>
                                            <responseElseIf>
                                                <variable identifier="iSign"/>
                                                <setOutcomeValue identifier="FEEDBACK">
                                                    <multiple>
                                                        <variable identifier="FEEDBACK"/>
                                                        <baseValue baseType="identifier">                                                
                                                            Sign2                                            
                                                        </baseValue>
                                                    </multiple>
                                                </setOutcomeValue>
                                                <setOutcomeValue identifier="SCORE">
                                                    <baseValue baseType="float">                                            
                                                        1.0                                        
                                                    </baseValue>
                                                </setOutcomeValue>
                                            </responseElseIf>
                                            <responseElse>
                                                <setOutcomeValue identifier="FEEDBACK">
                                                    <multiple>
                                                        <variable identifier="FEEDBACK"/>
                                                        <baseValue baseType="identifier">                                                
                                                            No2                                            
                                                        </baseValue>
                                                    </multiple>
                                                </setOutcomeValue>
                                                <setOutcomeValue identifier="SCORE">
                                                    <baseValue baseType="float">                                            
                                                        0.5                                        
                                                    </baseValue>
                                                </setOutcomeValue>
                                            </responseElse>
                                        </responseCondition>
                                    </responseElseIf>
                                    <responseElseIf>
                                        <not>
                                            <variable identifier="rOK"/>
                                        </not>
                                        <setOutcomeValue identifier="FEEDBACK">
                                            <multiple>
                                                <baseValue baseType="identifier">                                                
                                                    No1                                            
                                                </baseValue>
                                            </multiple>
                                        </setOutcomeValue>
                                        <responseCondition>
                                            <responseIf>
                                                <variable identifier="iOK"/>
                                                <setOutcomeValue identifier="FEEDBACK">
                                                    <multiple>
                                                        <variable identifier="FEEDBACK"/>
                                                        <baseValue baseType="identifier">                                                
                                                            OK2                                            
                                                        </baseValue>
                                                    </multiple>
                                                </setOutcomeValue>
                                                <setOutcomeValue identifier="SCORE">
                                                    <baseValue baseType="float">                                            
                                                        1.0                                        
                                                    </baseValue>
                                                </setOutcomeValue>
                                            </responseIf>
                                            <responseElseIf>
                                                <variable identifier="iSign"/>
                                                <setOutcomeValue identifier="FEEDBACK">
                                                    <multiple>
                                                        <variable identifier="FEEDBACK"/>
                                                        <baseValue baseType="identifier">                                                
                                                            Sign2                                            
                                                        </baseValue>
                                                    </multiple>
                                                </setOutcomeValue>
                                                <setOutcomeValue identifier="SCORE">
                                                    <baseValue baseType="float">                                            
                                                        0.5                                        
                                                    </baseValue>
                                                </setOutcomeValue>
                                            </responseElseIf>
                                            <responseElse>
                                                <setOutcomeValue identifier="FEEDBACK">
                                                    <multiple>
                                                        <variable identifier="FEEDBACK"/>
                                                        <baseValue baseType="identifier">                                                
                                                            No2                                            
                                                        </baseValue>
                                                    </multiple>
                                                </setOutcomeValue>
                                                <setOutcomeValue identifier="SCORE">
                                                    <baseValue baseType="float">                                            
                                                        0.0                                        
                                                    </baseValue>
                                                </setOutcomeValue>
                                            </responseElse>
                                        </responseCondition>
                                    </responseElseIf>
                                    <responseElse>
                                        <setOutcomeValue identifier="FEEDBACK">
                                            <multiple>
                                                <baseValue baseType="identifier">                                                
                                                    INCORRECT                                            
                                                </baseValue>
                                            </multiple>
                                        </setOutcomeValue>
                                        <setOutcomeValue identifier="SCORE">
                                            <baseValue baseType="float">                                            
                                                0.0                                        
                                            </baseValue>
                                        </setOutcomeValue>
                                    </responseElse>
                                </responseCondition>
                                
                            </responseElse>
                        </responseCondition>
                        <responseCondition>
                            <responseIf>
                                <variable identifier="seenSolution"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <variable identifier="FEEDBACK"/>
                                        <baseValue baseType="identifier"> SEEN-SOLUTION
                                            </baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <baseValue baseType="float"> 0.0
                                        </baseValue>
                                </setOutcomeValue>
                            </responseIf>
                            <responseElseIf>
                                <variable identifier="seenHint"/>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <variable identifier="FEEDBACK"/>
                                        <baseValue baseType="identifier"> SEEN-HINT
                                            </baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="SCORE">
                                    <divide>
                                        <variable identifier="SCORE"/>
                                        <baseValue baseType="float">
                                                1.0 </baseValue>
                                    </divide>
                                </setOutcomeValue>
                            </responseElseIf>
                        </responseCondition>
                        <responseCondition>
                            <responseIf>
                                <gt>
                                    <variable identifier="numAttempts"/>
                                    <baseValue baseType="integer"> 3
                                        </baseValue>
                                </gt>
                                <setOutcomeValue identifier="FEEDBACK">
                                    <multiple>
                                        <baseValue baseType="identifier"> THREETRIES </baseValue>
                                        <baseValue baseType="identifier"> SOLUTION
                                            </baseValue>
                                    </multiple>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="completionStatus">
                                    <baseValue baseType="identifier"> completed </baseValue>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="ASKHINT">
                                    <baseValue baseType="identifier"> null </baseValue>
                                </setOutcomeValue>
                                <setOutcomeValue identifier="ASKSOLUTION">
                                    <baseValue baseType="identifier"> null </baseValue>
                                </setOutcomeValue>
                            </responseIf>
                        </responseCondition>
                    </responseElse>
                </responseCondition>
            </responseElse>
        </responseCondition>
    </responseProcessing>
</assessmentItem>
